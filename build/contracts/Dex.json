{
  "contractName": "Dex",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "ticker",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "addToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "balances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "ticker",
          "type": "bytes32"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "depositEth",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextOrderId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "orderBook",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "internalType": "enum Dex.Side",
          "name": "side",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "ticker",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenList",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "tokenMapping",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "ticker",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "ticker",
          "type": "bytes32"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "ticker",
          "type": "bytes32"
        },
        {
          "internalType": "enum Dex.Side",
          "name": "side",
          "type": "uint8"
        }
      ],
      "name": "getOrderBook",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            },
            {
              "internalType": "enum Dex.Side",
              "name": "side",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "ticker",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            }
          ],
          "internalType": "struct Dex.Order[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "ticker",
          "type": "bytes32"
        },
        {
          "internalType": "enum Dex.Side",
          "name": "side",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "createLimitOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"ticker\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"addToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"ticker\",\"type\":\"bytes32\"},{\"internalType\":\"enum Dex.Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"createLimitOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"ticker\",\"type\":\"bytes32\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositEth\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"ticker\",\"type\":\"bytes32\"},{\"internalType\":\"enum Dex.Side\",\"name\":\"side\",\"type\":\"uint8\"}],\"name\":\"getOrderBook\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"enum Dex.Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"ticker\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct Dex.Order[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextOrderId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"orderBook\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"enum Dex.Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"ticker\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenList\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"tokenMapping\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"ticker\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"ticker\",\"type\":\"bytes32\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/D/Ivan On Tech Academy/Ethereum Programming 201/2021/DEX/contracts/Dex.sol\":\"Dex\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/D/Ivan On Tech Academy/Ethereum Programming 201/2021/DEX/contracts/Dex.sol\":{\"keccak256\":\"0x510d0d484fa1bdb8121f762e11331f689ff41de501528fd23576ab15e8b3b87c\",\"urls\":[\"bzz-raw://aa74993bee3dcbf7c61f1b8ac62095d2f723bf89540739104646d89f5f5d03f8\",\"dweb:/ipfs/QmVR3TVsitpqqXDpouu1jzy5Pr9hmNZrLgX8g5MVUe3hyB\"]},\"/D/Ivan On Tech Academy/Ethereum Programming 201/2021/DEX/contracts/Wallet.sol\":{\"keccak256\":\"0x332b8964cf1a1bf716db116bc0c24fd08f336d095ccc1ec7fd34cbf8a6008d1b\",\"urls\":[\"bzz-raw://69315dc5b6a561a6c3d35eef4767f696a8fc769d87462a6d7d6c9bb3e10944a7\",\"dweb:/ipfs/QmTsNRR798UzZSLGtavcCJnew8w71zozU5GzaftJw1Y2Yt\"]},\"/D/Ivan On Tech Academy/Ethereum Programming 201/2021/DEX/node_modules/@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]},\"/D/Ivan On Tech Academy/Ethereum Programming 201/2021/DEX/node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xf7c39c7e6d06ed3bda90cfefbcbf2ddc32c599c3d6721746546ad64946efccaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb57a28e189cd8b05748db44bdd51d608e6f1364dd1b35ad921e1bc82c10631e\",\"dweb:/ipfs/QmaWWTBbVu2pRR9XUbE4iC159NoP59cRF9ZJwhf4ghFN9i\"]},\"/D/Ivan On Tech Academy/Ethereum Programming 201/2021/DEX/node_modules/@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x3b21f2c8d626de3b9925ae33e972d8bf5c8b1bffb3f4ee94daeed7d0679036e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f8d45329fecbf0836ad7543330c3ecd0f8d0ffa42d4016278c3eb2215fdcdfe\",\"dweb:/ipfs/QmXWLT7GcnHtA5NiD6MFi2CV3EWJY4wv5mLNnypqYDrxL3\"]},\"/D/Ivan On Tech Academy/Ethereum Programming 201/2021/DEX/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]}},\"version\":1}",
  "bytecode": "0x6080604052600060045534801561001557600080fd5b5060006100266100c960201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3506100d1565b600033905090565b61265b806100e06000396000f3fe6080604052600436106100dd5760003560e01c80639776aacf1161007f578063ba58ea6811610059578063ba58ea68146102a5578063c9630cb0146102e2578063ed25c4d31461030b578063f2fde38b14610334576100dd565b80639776aacf146102165780639ead72221461023f578063a8d2021a1461027c576100dd565b8063439370b1116100bb578063439370b11461018c578063667cb4ba14610196578063715018a6146101d45780638da5cb5b146101eb576100dd565b80630bb431b6146100e25780631f14df69146101245780632a58b33014610161575b600080fd5b3480156100ee57600080fd5b5061010960048036038101906101049190612012565b61035d565b60405161011b9695949392919061245d565b60405180910390f35b34801561013057600080fd5b5061014b60048036038101906101469190611ed2565b6103f0565b6040516101589190612442565b60405180910390f35b34801561016d57600080fd5b50610176610415565b6040516101839190612442565b60405180910390f35b61019461041b565b005b3480156101a257600080fd5b506101bd60048036038101906101b89190611f0e565b610514565b6040516101cb9291906123b9565b60405180910390f35b3480156101e057600080fd5b506101e9610558565b005b3480156101f757600080fd5b506102006106de565b60405161020d9190612361565b60405180910390f35b34801561022257600080fd5b5061023d60048036038101906102389190611f37565b610707565b005b34801561024b57600080fd5b5061026660048036038101906102619190612061565b610966565b604051610273919061239e565b60405180910390f35b34801561028857600080fd5b506102a3600480360381019061029e919061208a565b61098a565b005b3480156102b157600080fd5b506102cc60048036038101906102c79190611f73565b610cc9565b6040516102d9919061237c565b60405180910390f35b3480156102ee57600080fd5b506103096004803603810190610304919061208a565b610e03565b005b34801561031757600080fd5b50610332600480360381019061032d9190611faf565b61109a565b005b34801561034057600080fd5b5061035b60048036038101906103569190611ea9565b6113f2565b005b6005602052826000526040600020602052816000526040600020818154811061038557600080fd5b906000526020600020906005020160009250925050508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160149054906101000a900460ff16908060020154908060030154908060040154905086565b6003602052816000526040600020602052806000526040600020600091509150505481565b60045481565b61049e34600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060007f45544800000000000000000000000000000000000000000000000000000000008152602001908152602001600020546115fd90919063ffffffff16565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060007f4554480000000000000000000000000000000000000000000000000000000000815260200190815260200160002081905550565b60016020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082565b610560611685565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610620576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61070f611685565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146107cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166001600084815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146108a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f43616e6e6f7420616464207468652073616d6520746f6b656e2074776963650081525060200191505060405180910390fd5b60405180604001604052808381526020018273ffffffffffffffffffffffffffffffffffffffff16815250600160008481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505060028290806001815401808255809150506001900390600052602060002001600090919091909150555050565b6002818154811061097657600080fd5b906000526020600020016000915090505481565b80600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610a64576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f546f6b656e20646f6573206e6f7420657869737400000000000000000000000081525060200191505060405180910390fd5b82600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020541015610b2a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f42616c616e6365206e6f742073756666696369656e740000000000000000000081525060200191505060405180910390fd5b610b8d83600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008581526020019081526020016000205461168d90919063ffffffff16565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020819055506001600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610c8857600080fd5b505af1158015610c9c573d6000803e3d6000fd5b505050506040513d6020811015610cb257600080fd5b810190808051906020019092919050505050505050565b6060600560008481526020019081526020016000206000836001811115610cec57fe5b8152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015610df757838290600052602060002090600502016040518060c0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160149054906101000a900460ff166001811115610dbb57fe5b6001811115610dc657fe5b8152602001600282015481526020016003820154815260200160048201548152505081526020019060010190610d1a565b50505050905092915050565b80600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610edd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f546f6b656e20646f6573206e6f7420657869737400000000000000000000000081525060200191505060405180910390fd5b610f4083600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000858152602001908152602001600020546115fd90919063ffffffff16565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020819055506001600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561105957600080fd5b505af115801561106d573d6000803e3d6000fd5b505050506040513d602081101561108357600080fd5b810190808051906020019092919050505050505050565b60008210156110de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110d590612422565b60405180910390fd5b600060018111156110eb57fe5b8360018111156110f757fe5b14156111c75761111081836116d790919063ffffffff16565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060007f455448000000000000000000000000000000000000000000000000000000000081526020019081526020016000205410156111c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111b990612402565b60405180910390fd5b61127a565b6001808111156111d357fe5b8360018111156111df57fe5b14156112795781600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000868152602001908152602001600020541015611278576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161126f906123e2565b60405180910390fd5b5b5b600060056000868152602001908152602001600020600085600181111561129d57fe5b81526020019081526020016000209050806040518060c0016040528060045481526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018660018111156112e957fe5b81526020018781526020018581526020018481525090806001815401808255809150506001900390600052602060002090600502016000909190919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548160ff0219169083600181111561139c57fe5b0217905550606082015181600201556080820151816003015560a0820151816004015550506000818054905011156113d9576113d8818561175d565b5b6004600081548092919060010191905055505050505050565b6113fa611685565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146114ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611540576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806125df6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008082840190508381101561167b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600033905090565b60006116cf83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611d95565b905092915050565b6000808314156116ea5760009050611757565b60008284029050828482816116fb57fe5b0414611752576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806126056021913960400191505060405180910390fd5b809150505b92915050565b6000600181111561176a57fe5b81600181111561177657fe5b1415611a79576000600183805490500390505b6000811115611a73578260018203815481106117a157fe5b9060005260206000209060050201600401548382815481106117bf57fe5b9060005260206000209060050201600401541115611a655760008360018303815481106117e857fe5b90600052602060002090600502016040518060c0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160149054906101000a900460ff16600181111561187f57fe5b600181111561188a57fe5b8152602001600282015481526020016003820154815260200160048201548152505090508382815481106118ba57fe5b90600052602060002090600502018460018403815481106118d757fe5b9060005260206000209060050201600082015481600001556001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001820160149054906101000a900460ff168160010160146101000a81548160ff0219169083600181111561198757fe5b0217905550600282015481600201556003820154816003015560048201548160040155905050808483815481106119ba57fe5b90600052602060002090600502016000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548160ff02191690836001811115611a3d57fe5b0217905550606082015181600201556080820151816003015560a08201518160040155905050505b808060019003915050611789565b50611d91565b600180811115611a8557fe5b816001811115611a9157fe5b1415611d90576000600183805490500390505b6000811115611d8e57826001820381548110611abc57fe5b906000526020600020906005020160040154838281548110611ada57fe5b9060005260206000209060050201600401541015611d80576000836001830381548110611b0357fe5b90600052602060002090600502016040518060c0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160149054906101000a900460ff166001811115611b9a57fe5b6001811115611ba557fe5b815260200160028201548152602001600382015481526020016004820154815250509050838281548110611bd557fe5b9060005260206000209060050201846001840381548110611bf257fe5b9060005260206000209060050201600082015481600001556001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001820160149054906101000a900460ff168160010160146101000a81548160ff02191690836001811115611ca257fe5b021790555060028201548160020155600382015481600301556004820154816004015590505080848381548110611cd557fe5b90600052602060002090600502016000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548160ff02191690836001811115611d5857fe5b0217905550606082015181600201556080820151816003015560a08201518160040155905050505b808060019003915050611aa4565b505b5b5050565b6000838311158290611e42576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611e07578082015181840152602081019050611dec565b50505050905090810190601f168015611e345780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b600081359050611e6481612589565b92915050565b600081359050611e79816125a0565b92915050565b600081359050611e8e816125b7565b92915050565b600081359050611ea3816125c7565b92915050565b600060208284031215611ebb57600080fd5b6000611ec984828501611e55565b91505092915050565b60008060408385031215611ee557600080fd5b6000611ef385828601611e55565b9250506020611f0485828601611e6a565b9150509250929050565b600060208284031215611f2057600080fd5b6000611f2e84828501611e6a565b91505092915050565b60008060408385031215611f4a57600080fd5b6000611f5885828601611e6a565b9250506020611f6985828601611e55565b9150509250929050565b60008060408385031215611f8657600080fd5b6000611f9485828601611e6a565b9250506020611fa585828601611e7f565b9150509250929050565b60008060008060808587031215611fc557600080fd5b6000611fd387828801611e6a565b9450506020611fe487828801611e7f565b9350506040611ff587828801611e94565b925050606061200687828801611e94565b91505092959194509250565b60008060006060848603121561202757600080fd5b600061203586828701611e6a565b935050602061204686828701611e94565b925050604061205786828701611e94565b9150509250925092565b60006020828403121561207357600080fd5b600061208184828501611e94565b91505092915050565b6000806040838503121561209d57600080fd5b60006120ab85828601611e94565b92505060206120bc85828601611e6a565b9150509250929050565b60006120d283836122c8565b60c08301905092915050565b6120e781612508565b82525050565b6120f681612508565b82525050565b6000612107826124ce565b61211181856124e6565b935061211c836124be565b8060005b8381101561214d57815161213488826120c6565b975061213f836124d9565b925050600181019050612120565b5085935050505092915050565b6121638161251a565b82525050565b6121728161251a565b82525050565b61218181612561565b82525050565b61219081612561565b82525050565b60006121a36031836124f7565b91507f416d6f756e74206d757374206265206c657373207468616e206f72206571756160008301527f6c20746f2062616c616e636520736f6c640000000000000000000000000000006020830152604082019050919050565b60006122096025836124f7565b91507f496e73756666696369656e742066756e647320746f20706c616365206275792060008301527f6f726465720000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061226f6038836124f7565b91507f4d75737420737570706c792061206e6f6e2d7a65726f20616d6f756e7420796f60008301527f7520776f756c64206c696b6520746f206275792f73656c6c00000000000000006020830152604082019050919050565b60c0820160008201516122de6000850182612343565b5060208201516122f160208501826120de565b5060408201516123046040850182612178565b506060820151612317606085018261215a565b50608082015161232a6080850182612343565b5060a082015161233d60a0850182612343565b50505050565b61234c81612557565b82525050565b61235b81612557565b82525050565b600060208201905061237660008301846120ed565b92915050565b6000602082019050818103600083015261239681846120fc565b905092915050565b60006020820190506123b36000830184612169565b92915050565b60006040820190506123ce6000830185612169565b6123db60208301846120ed565b9392505050565b600060208201905081810360008301526123fb81612196565b9050919050565b6000602082019050818103600083015261241b816121fc565b9050919050565b6000602082019050818103600083015261243b81612262565b9050919050565b60006020820190506124576000830184612352565b92915050565b600060c0820190506124726000830189612352565b61247f60208301886120ed565b61248c6040830187612187565b6124996060830186612169565b6124a66080830185612352565b6124b360a0830184612352565b979650505050505050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600061251382612537565b9050919050565b6000819050919050565b600081905061253282612575565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061256c82612524565b9050919050565bfe5b6002811061258657612585612573565b5b50565b61259281612508565b811461259d57600080fd5b50565b6125a98161251a565b81146125b457600080fd5b50565b600281106125c457600080fd5b50565b6125d081612557565b81146125db57600080fd5b5056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a2646970667358221220609145362caa938b991ce45b3b0999af8c788fd58aba9c87a316ca4ab76c897a64736f6c63430007060033",
  "deployedBytecode": "0x6080604052600436106100dd5760003560e01c80639776aacf1161007f578063ba58ea6811610059578063ba58ea68146102a5578063c9630cb0146102e2578063ed25c4d31461030b578063f2fde38b14610334576100dd565b80639776aacf146102165780639ead72221461023f578063a8d2021a1461027c576100dd565b8063439370b1116100bb578063439370b11461018c578063667cb4ba14610196578063715018a6146101d45780638da5cb5b146101eb576100dd565b80630bb431b6146100e25780631f14df69146101245780632a58b33014610161575b600080fd5b3480156100ee57600080fd5b5061010960048036038101906101049190612012565b61035d565b60405161011b9695949392919061245d565b60405180910390f35b34801561013057600080fd5b5061014b60048036038101906101469190611ed2565b6103f0565b6040516101589190612442565b60405180910390f35b34801561016d57600080fd5b50610176610415565b6040516101839190612442565b60405180910390f35b61019461041b565b005b3480156101a257600080fd5b506101bd60048036038101906101b89190611f0e565b610514565b6040516101cb9291906123b9565b60405180910390f35b3480156101e057600080fd5b506101e9610558565b005b3480156101f757600080fd5b506102006106de565b60405161020d9190612361565b60405180910390f35b34801561022257600080fd5b5061023d60048036038101906102389190611f37565b610707565b005b34801561024b57600080fd5b5061026660048036038101906102619190612061565b610966565b604051610273919061239e565b60405180910390f35b34801561028857600080fd5b506102a3600480360381019061029e919061208a565b61098a565b005b3480156102b157600080fd5b506102cc60048036038101906102c79190611f73565b610cc9565b6040516102d9919061237c565b60405180910390f35b3480156102ee57600080fd5b506103096004803603810190610304919061208a565b610e03565b005b34801561031757600080fd5b50610332600480360381019061032d9190611faf565b61109a565b005b34801561034057600080fd5b5061035b60048036038101906103569190611ea9565b6113f2565b005b6005602052826000526040600020602052816000526040600020818154811061038557600080fd5b906000526020600020906005020160009250925050508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160149054906101000a900460ff16908060020154908060030154908060040154905086565b6003602052816000526040600020602052806000526040600020600091509150505481565b60045481565b61049e34600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060007f45544800000000000000000000000000000000000000000000000000000000008152602001908152602001600020546115fd90919063ffffffff16565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060007f4554480000000000000000000000000000000000000000000000000000000000815260200190815260200160002081905550565b60016020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082565b610560611685565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610620576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61070f611685565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146107cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166001600084815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146108a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f43616e6e6f7420616464207468652073616d6520746f6b656e2074776963650081525060200191505060405180910390fd5b60405180604001604052808381526020018273ffffffffffffffffffffffffffffffffffffffff16815250600160008481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505060028290806001815401808255809150506001900390600052602060002001600090919091909150555050565b6002818154811061097657600080fd5b906000526020600020016000915090505481565b80600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610a64576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f546f6b656e20646f6573206e6f7420657869737400000000000000000000000081525060200191505060405180910390fd5b82600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020541015610b2a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f42616c616e6365206e6f742073756666696369656e740000000000000000000081525060200191505060405180910390fd5b610b8d83600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008581526020019081526020016000205461168d90919063ffffffff16565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020819055506001600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610c8857600080fd5b505af1158015610c9c573d6000803e3d6000fd5b505050506040513d6020811015610cb257600080fd5b810190808051906020019092919050505050505050565b6060600560008481526020019081526020016000206000836001811115610cec57fe5b8152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015610df757838290600052602060002090600502016040518060c0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160149054906101000a900460ff166001811115610dbb57fe5b6001811115610dc657fe5b8152602001600282015481526020016003820154815260200160048201548152505081526020019060010190610d1a565b50505050905092915050565b80600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610edd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f546f6b656e20646f6573206e6f7420657869737400000000000000000000000081525060200191505060405180910390fd5b610f4083600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000858152602001908152602001600020546115fd90919063ffffffff16565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020819055506001600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561105957600080fd5b505af115801561106d573d6000803e3d6000fd5b505050506040513d602081101561108357600080fd5b810190808051906020019092919050505050505050565b60008210156110de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110d590612422565b60405180910390fd5b600060018111156110eb57fe5b8360018111156110f757fe5b14156111c75761111081836116d790919063ffffffff16565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060007f455448000000000000000000000000000000000000000000000000000000000081526020019081526020016000205410156111c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111b990612402565b60405180910390fd5b61127a565b6001808111156111d357fe5b8360018111156111df57fe5b14156112795781600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000868152602001908152602001600020541015611278576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161126f906123e2565b60405180910390fd5b5b5b600060056000868152602001908152602001600020600085600181111561129d57fe5b81526020019081526020016000209050806040518060c0016040528060045481526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018660018111156112e957fe5b81526020018781526020018581526020018481525090806001815401808255809150506001900390600052602060002090600502016000909190919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548160ff0219169083600181111561139c57fe5b0217905550606082015181600201556080820151816003015560a0820151816004015550506000818054905011156113d9576113d8818561175d565b5b6004600081548092919060010191905055505050505050565b6113fa611685565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146114ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611540576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806125df6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008082840190508381101561167b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600033905090565b60006116cf83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611d95565b905092915050565b6000808314156116ea5760009050611757565b60008284029050828482816116fb57fe5b0414611752576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806126056021913960400191505060405180910390fd5b809150505b92915050565b6000600181111561176a57fe5b81600181111561177657fe5b1415611a79576000600183805490500390505b6000811115611a73578260018203815481106117a157fe5b9060005260206000209060050201600401548382815481106117bf57fe5b9060005260206000209060050201600401541115611a655760008360018303815481106117e857fe5b90600052602060002090600502016040518060c0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160149054906101000a900460ff16600181111561187f57fe5b600181111561188a57fe5b8152602001600282015481526020016003820154815260200160048201548152505090508382815481106118ba57fe5b90600052602060002090600502018460018403815481106118d757fe5b9060005260206000209060050201600082015481600001556001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001820160149054906101000a900460ff168160010160146101000a81548160ff0219169083600181111561198757fe5b0217905550600282015481600201556003820154816003015560048201548160040155905050808483815481106119ba57fe5b90600052602060002090600502016000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548160ff02191690836001811115611a3d57fe5b0217905550606082015181600201556080820151816003015560a08201518160040155905050505b808060019003915050611789565b50611d91565b600180811115611a8557fe5b816001811115611a9157fe5b1415611d90576000600183805490500390505b6000811115611d8e57826001820381548110611abc57fe5b906000526020600020906005020160040154838281548110611ada57fe5b9060005260206000209060050201600401541015611d80576000836001830381548110611b0357fe5b90600052602060002090600502016040518060c0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160149054906101000a900460ff166001811115611b9a57fe5b6001811115611ba557fe5b815260200160028201548152602001600382015481526020016004820154815250509050838281548110611bd557fe5b9060005260206000209060050201846001840381548110611bf257fe5b9060005260206000209060050201600082015481600001556001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001820160149054906101000a900460ff168160010160146101000a81548160ff02191690836001811115611ca257fe5b021790555060028201548160020155600382015481600301556004820154816004015590505080848381548110611cd557fe5b90600052602060002090600502016000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548160ff02191690836001811115611d5857fe5b0217905550606082015181600201556080820151816003015560a08201518160040155905050505b808060019003915050611aa4565b505b5b5050565b6000838311158290611e42576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611e07578082015181840152602081019050611dec565b50505050905090810190601f168015611e345780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b600081359050611e6481612589565b92915050565b600081359050611e79816125a0565b92915050565b600081359050611e8e816125b7565b92915050565b600081359050611ea3816125c7565b92915050565b600060208284031215611ebb57600080fd5b6000611ec984828501611e55565b91505092915050565b60008060408385031215611ee557600080fd5b6000611ef385828601611e55565b9250506020611f0485828601611e6a565b9150509250929050565b600060208284031215611f2057600080fd5b6000611f2e84828501611e6a565b91505092915050565b60008060408385031215611f4a57600080fd5b6000611f5885828601611e6a565b9250506020611f6985828601611e55565b9150509250929050565b60008060408385031215611f8657600080fd5b6000611f9485828601611e6a565b9250506020611fa585828601611e7f565b9150509250929050565b60008060008060808587031215611fc557600080fd5b6000611fd387828801611e6a565b9450506020611fe487828801611e7f565b9350506040611ff587828801611e94565b925050606061200687828801611e94565b91505092959194509250565b60008060006060848603121561202757600080fd5b600061203586828701611e6a565b935050602061204686828701611e94565b925050604061205786828701611e94565b9150509250925092565b60006020828403121561207357600080fd5b600061208184828501611e94565b91505092915050565b6000806040838503121561209d57600080fd5b60006120ab85828601611e94565b92505060206120bc85828601611e6a565b9150509250929050565b60006120d283836122c8565b60c08301905092915050565b6120e781612508565b82525050565b6120f681612508565b82525050565b6000612107826124ce565b61211181856124e6565b935061211c836124be565b8060005b8381101561214d57815161213488826120c6565b975061213f836124d9565b925050600181019050612120565b5085935050505092915050565b6121638161251a565b82525050565b6121728161251a565b82525050565b61218181612561565b82525050565b61219081612561565b82525050565b60006121a36031836124f7565b91507f416d6f756e74206d757374206265206c657373207468616e206f72206571756160008301527f6c20746f2062616c616e636520736f6c640000000000000000000000000000006020830152604082019050919050565b60006122096025836124f7565b91507f496e73756666696369656e742066756e647320746f20706c616365206275792060008301527f6f726465720000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061226f6038836124f7565b91507f4d75737420737570706c792061206e6f6e2d7a65726f20616d6f756e7420796f60008301527f7520776f756c64206c696b6520746f206275792f73656c6c00000000000000006020830152604082019050919050565b60c0820160008201516122de6000850182612343565b5060208201516122f160208501826120de565b5060408201516123046040850182612178565b506060820151612317606085018261215a565b50608082015161232a6080850182612343565b5060a082015161233d60a0850182612343565b50505050565b61234c81612557565b82525050565b61235b81612557565b82525050565b600060208201905061237660008301846120ed565b92915050565b6000602082019050818103600083015261239681846120fc565b905092915050565b60006020820190506123b36000830184612169565b92915050565b60006040820190506123ce6000830185612169565b6123db60208301846120ed565b9392505050565b600060208201905081810360008301526123fb81612196565b9050919050565b6000602082019050818103600083015261241b816121fc565b9050919050565b6000602082019050818103600083015261243b81612262565b9050919050565b60006020820190506124576000830184612352565b92915050565b600060c0820190506124726000830189612352565b61247f60208301886120ed565b61248c6040830187612187565b6124996060830186612169565b6124a66080830185612352565b6124b360a0830184612352565b979650505050505050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600061251382612537565b9050919050565b6000819050919050565b600081905061253282612575565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061256c82612524565b9050919050565bfe5b6002811061258657612585612573565b5b50565b61259281612508565b811461259d57600080fd5b50565b6125a98161251a565b81146125b457600080fd5b50565b600281106125c457600080fd5b50565b6125d081612557565b81146125db57600080fd5b5056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a2646970667358221220609145362caa938b991ce45b3b0999af8c788fd58aba9c87a316ca4ab76c897a64736f6c63430007060033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:14668:8",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "107:26:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:8"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:8",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:8",
                "type": ""
              }
            ],
            "src": "7:139:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "204:87:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "214:29:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "236:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "223:12:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "223:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "214:5:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "279:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bytes32",
                      "nodeType": "YulIdentifier",
                      "src": "252:26:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "252:33:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "252:33:8"
                }
              ]
            },
            "name": "abi_decode_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "182:6:8",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "190:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "198:5:8",
                "type": ""
              }
            ],
            "src": "152:139:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "356:94:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "366:29:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "388:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "375:12:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "375:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "366:5:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "438:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_enum$_Side_$12",
                      "nodeType": "YulIdentifier",
                      "src": "404:33:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "404:40:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "404:40:8"
                }
              ]
            },
            "name": "abi_decode_t_enum$_Side_$12",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "334:6:8",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "342:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "350:5:8",
                "type": ""
              }
            ],
            "src": "297:153:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "508:87:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "518:29:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "540:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "527:12:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "527:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "518:5:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "583:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "556:26:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "556:33:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "556:33:8"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "486:6:8",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "494:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "502:5:8",
                "type": ""
              }
            ],
            "src": "456:139:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "667:196:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "713:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "722:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "725:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "715:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "715:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "715:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "688:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "697:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "684:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "684:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "709:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "680:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "680:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "677:2:8"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "739:117:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "754:15:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "768:1:8",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "758:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "783:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "818:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "829:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "814:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "814:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "838:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "793:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "793:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "783:6:8"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "637:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "648:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "660:6:8",
                "type": ""
              }
            ],
            "src": "601:262:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "952:324:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "998:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1007:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1010:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1000:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1000:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1000:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "973:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "982:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "969:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "969:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "994:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "965:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "965:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "962:2:8"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1024:117:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1039:15:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1053:1:8",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1043:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1068:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1103:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1114:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1099:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1099:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1123:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1078:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1078:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1068:6:8"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1151:118:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1166:16:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1180:2:8",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1170:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1196:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1231:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1242:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1227:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1227:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1251:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "1206:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1206:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1196:6:8"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "914:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "925:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "937:6:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "945:6:8",
                "type": ""
              }
            ],
            "src": "869:407:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1348:196:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1394:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1403:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1406:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1396:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1396:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1396:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1369:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1378:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1365:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1365:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1390:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1361:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1361:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "1358:2:8"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1420:117:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1435:15:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1449:1:8",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1439:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1464:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1499:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1510:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1495:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1495:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1519:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "1474:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1474:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1464:6:8"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1318:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1329:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1341:6:8",
                "type": ""
              }
            ],
            "src": "1282:262:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1633:324:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1679:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1688:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1691:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1681:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1681:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1681:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1654:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1663:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1650:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1650:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1675:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1646:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1646:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "1643:2:8"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1705:117:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1720:15:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1734:1:8",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1724:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1749:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1784:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1795:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1780:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1780:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1804:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "1759:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1759:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1749:6:8"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1832:118:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1847:16:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1861:2:8",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1851:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1877:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1912:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1923:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1908:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1908:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1932:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1887:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1887:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1877:6:8"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1595:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1606:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1618:6:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1626:6:8",
                "type": ""
              }
            ],
            "src": "1550:407:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2053:331:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2099:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2108:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2111:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2101:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2101:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2101:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2074:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2083:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2070:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2070:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2095:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2066:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2066:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "2063:2:8"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2125:117:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2140:15:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2154:1:8",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2144:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2169:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2204:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2215:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2200:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2200:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2224:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "2179:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2179:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2169:6:8"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2252:125:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2267:16:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2281:2:8",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2271:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2297:70:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2339:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2350:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2335:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2335:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2359:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_enum$_Side_$12",
                          "nodeType": "YulIdentifier",
                          "src": "2307:27:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2307:60:8"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2297:6:8"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_enum$_Side_$12",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2015:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2026:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2038:6:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2046:6:8",
                "type": ""
              }
            ],
            "src": "1963:421:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2514:588:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2561:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2570:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2573:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2563:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2563:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2563:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2535:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2544:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2531:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2531:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2556:3:8",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2527:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2527:33:8"
                  },
                  "nodeType": "YulIf",
                  "src": "2524:2:8"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2587:117:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2602:15:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2616:1:8",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2606:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2631:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2666:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2677:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2662:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2662:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2686:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "2641:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2641:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2631:6:8"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2714:125:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2729:16:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2743:2:8",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2733:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2759:70:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2801:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2812:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2797:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2797:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2821:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_enum$_Side_$12",
                          "nodeType": "YulIdentifier",
                          "src": "2769:27:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2769:60:8"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2759:6:8"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2849:118:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2864:16:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2878:2:8",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2868:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2894:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2929:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2940:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2925:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2925:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2949:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2904:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2904:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "2894:6:8"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2977:118:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2992:16:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3006:2:8",
                        "type": "",
                        "value": "96"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2996:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3022:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3057:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3068:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3053:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3053:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3077:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3032:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3032:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "3022:6:8"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_enum$_Side_$12t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2460:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2471:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2483:6:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2491:6:8",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2499:6:8",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "2507:6:8",
                "type": ""
              }
            ],
            "src": "2390:712:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3208:452:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3254:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3263:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3266:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3256:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3256:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3256:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3229:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3238:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3225:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3225:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3250:2:8",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3221:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3221:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "3218:2:8"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3280:117:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3295:15:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3309:1:8",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3299:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3324:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3359:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3370:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3355:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3355:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3379:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "3334:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3334:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3324:6:8"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3407:118:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3422:16:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3436:2:8",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3426:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3452:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3487:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3498:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3483:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3483:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3507:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3462:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3462:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "3452:6:8"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3535:118:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3550:16:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3564:2:8",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3554:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3580:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3615:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3626:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3611:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3611:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3635:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3590:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3590:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "3580:6:8"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3162:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3173:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3185:6:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3193:6:8",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3201:6:8",
                "type": ""
              }
            ],
            "src": "3108:552:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3732:196:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3778:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3787:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3790:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3780:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3780:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3780:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3753:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3762:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3749:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3749:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3774:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3745:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3745:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "3742:2:8"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3804:117:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3819:15:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3833:1:8",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3823:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3848:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3883:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3894:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3879:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3879:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3903:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3858:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3858:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3848:6:8"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3702:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3713:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3725:6:8",
                "type": ""
              }
            ],
            "src": "3666:262:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4017:324:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4063:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4072:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4075:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4065:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4065:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4065:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4038:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4047:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4034:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4034:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4059:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4030:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4030:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "4027:2:8"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4089:117:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4104:15:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4118:1:8",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4108:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4133:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4168:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4179:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4164:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4164:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4188:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "4143:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4143:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "4133:6:8"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4216:118:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4231:16:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4245:2:8",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4235:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4261:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4296:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4307:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4292:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4292:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4316:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "4271:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4271:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "4261:6:8"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3979:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3990:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4002:6:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4010:6:8",
                "type": ""
              }
            ],
            "src": "3934:407:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4469:141:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4555:6:8"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4563:3:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_struct$_Order_$25_memory_ptr_to_t_struct$_Order_$25_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "4479:75:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4479:88:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4479:88:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4576:28:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4594:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4599:4:8",
                        "type": "",
                        "value": "0xc0"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4590:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4590:14:8"
                  },
                  "variableNames": [
                    {
                      "name": "updatedPos",
                      "nodeType": "YulIdentifier",
                      "src": "4576:10:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encodeUpdatedPos_t_struct$_Order_$25_memory_ptr_to_t_struct$_Order_$25_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4442:6:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4450:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updatedPos",
                "nodeType": "YulTypedName",
                "src": "4458:10:8",
                "type": ""
              }
            ],
            "src": "4347:263:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4671:53:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4688:3:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4711:5:8"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "4693:17:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4693:24:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4681:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4681:37:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4681:37:8"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4659:5:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4666:3:8",
                "type": ""
              }
            ],
            "src": "4616:108:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4795:53:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4812:3:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4835:5:8"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "4817:17:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4817:24:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4805:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4805:37:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4805:37:8"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4783:5:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4790:3:8",
                "type": ""
              }
            ],
            "src": "4730:118:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5068:734:8",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5078:89:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5161:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_array$_t_struct$_Order_$25_memory_ptr_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "5092:68:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5092:75:8"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "5082:6:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5176:114:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5278:3:8"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5283:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_array$_t_struct$_Order_$25_memory_ptr_$dyn_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5183:94:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5183:107:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5176:3:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5299:92:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5385:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "array_dataslot_t_array$_t_struct$_Order_$25_memory_ptr_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "5314:70:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5314:77:8"
                  },
                  "variables": [
                    {
                      "name": "baseRef",
                      "nodeType": "YulTypedName",
                      "src": "5303:7:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5400:21:8",
                  "value": {
                    "name": "baseRef",
                    "nodeType": "YulIdentifier",
                    "src": "5414:7:8"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "5404:6:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5490:287:8",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "5504:34:8",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "5531:6:8"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "5525:5:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5525:13:8"
                        },
                        "variables": [
                          {
                            "name": "elementValue0",
                            "nodeType": "YulTypedName",
                            "src": "5508:13:8",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "5551:112:8",
                        "value": {
                          "arguments": [
                            {
                              "name": "elementValue0",
                              "nodeType": "YulIdentifier",
                              "src": "5644:13:8"
                            },
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "5659:3:8"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encodeUpdatedPos_t_struct$_Order_$25_memory_ptr_to_t_struct$_Order_$25_memory_ptr",
                            "nodeType": "YulIdentifier",
                            "src": "5558:85:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5558:105:8"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5551:3:8"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "5676:91:8",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "5760:6:8"
                            }
                          ],
                          "functionName": {
                            "name": "array_nextElement_t_array$_t_struct$_Order_$25_memory_ptr_$dyn_memory_ptr",
                            "nodeType": "YulIdentifier",
                            "src": "5686:73:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5686:81:8"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "5676:6:8"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "5452:1:8"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5455:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "5449:2:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5449:13:8"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "5463:18:8",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "5465:14:8",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "5474:1:8"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5477:1:8",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "5470:3:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5470:9:8"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "5465:1:8"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "5434:14:8",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "5436:10:8",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "5445:1:8",
                          "type": "",
                          "value": "0"
                        },
                        "variables": [
                          {
                            "name": "i",
                            "nodeType": "YulTypedName",
                            "src": "5440:1:8",
                            "type": ""
                          }
                        ]
                      }
                    ]
                  },
                  "src": "5430:347:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5786:10:8",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "5793:3:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5786:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_array$_t_struct$_Order_$25_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Order_$25_memory_ptr_$dyn_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5047:5:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5054:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5063:3:8",
                "type": ""
              }
            ],
            "src": "4902:900:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5863:53:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5880:3:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5903:5:8"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "5885:17:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5885:24:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5873:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5873:37:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5873:37:8"
                }
              ]
            },
            "name": "abi_encode_t_bytes32_to_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5851:5:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5858:3:8",
                "type": ""
              }
            ],
            "src": "5808:108:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5987:53:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6004:3:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6027:5:8"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "6009:17:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6009:24:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5997:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5997:37:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5997:37:8"
                }
              ]
            },
            "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5975:5:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5982:3:8",
                "type": ""
              }
            ],
            "src": "5922:118:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6106:71:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6123:3:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6164:5:8"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_enum$_Side_$12_to_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "6128:35:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6128:42:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6116:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6116:55:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6116:55:8"
                }
              ]
            },
            "name": "abi_encode_t_enum$_Side_$12_to_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6094:5:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6101:3:8",
                "type": ""
              }
            ],
            "src": "6046:131:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6253:71:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6270:3:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6311:5:8"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_enum$_Side_$12_to_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "6275:35:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6275:42:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6263:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6263:55:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6263:55:8"
                }
              ]
            },
            "name": "abi_encode_t_enum$_Side_$12_to_t_uint8_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6241:5:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6248:3:8",
                "type": ""
              }
            ],
            "src": "6183:141:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6476:235:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6486:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6552:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6557:2:8",
                        "type": "",
                        "value": "49"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6493:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6493:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6486:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6581:3:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6586:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6577:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6577:11:8"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6590:34:8",
                        "type": "",
                        "value": "Amount must be less than or equa"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6570:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6570:55:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6570:55:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6646:3:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6651:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6642:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6642:12:8"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6656:19:8",
                        "type": "",
                        "value": "l to balance sold"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6635:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6635:41:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6635:41:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6686:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6697:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6702:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6693:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6693:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6686:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_76da05e533ce8c94bd709e9147d4cfa7f84cac1a15886f38246d6deb5177fe61_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6464:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6472:3:8",
                "type": ""
              }
            ],
            "src": "6330:381:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6863:223:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6873:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6939:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6944:2:8",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6880:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6880:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6873:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6968:3:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6973:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6964:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6964:11:8"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6977:34:8",
                        "type": "",
                        "value": "Insufficient funds to place buy "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6957:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6957:55:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6957:55:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "7033:3:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7038:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7029:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7029:12:8"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7043:7:8",
                        "type": "",
                        "value": "order"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7022:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7022:29:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7022:29:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7061:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7072:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7077:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7068:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7068:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "7061:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_b2e4c56c41e5356ec7e207a60af06952b71d2bb0dd8ce40ea66388e53e4e8652_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6851:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6859:3:8",
                "type": ""
              }
            ],
            "src": "6717:369:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7238:242:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7248:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7314:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7319:2:8",
                        "type": "",
                        "value": "56"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7255:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7255:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "7248:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "7343:3:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7348:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7339:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7339:11:8"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7352:34:8",
                        "type": "",
                        "value": "Must supply a non-zero amount yo"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7332:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7332:55:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7332:55:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "7408:3:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7413:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7404:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7404:12:8"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7418:26:8",
                        "type": "",
                        "value": "u would like to buy/sell"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7397:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7397:48:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7397:48:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7455:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7466:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7471:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7462:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7462:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "7455:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_be97154724c44ab4cd4d1f444e9ba13295d267756b33528c323b465c74416742_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7226:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7234:3:8",
                "type": ""
              }
            ],
            "src": "7092:388:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7628:1097:8",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7638:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7654:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7659:4:8",
                        "type": "",
                        "value": "0xc0"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7650:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7650:14:8"
                  },
                  "variables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "7642:4:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "7674:162:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "7707:43:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "7737:5:8"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7744:4:8",
                                "type": "",
                                "value": "0x00"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7733:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7733:16:8"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "7727:5:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7727:23:8"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "7711:12:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "7797:12:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "7815:3:8"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7820:4:8",
                                "type": "",
                                "value": "0x00"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7811:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7811:14:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "7763:33:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7763:63:8"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7763:63:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "7846:166:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "7883:43:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "7913:5:8"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7920:4:8",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7909:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7909:16:8"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "7903:5:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7903:23:8"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "7887:12:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "7973:12:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "7991:3:8"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7996:4:8",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7987:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7987:14:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_address_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "7939:33:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7939:63:8"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7939:63:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "8022:169:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "8057:43:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "8087:5:8"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8094:4:8",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8083:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8083:16:8"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "8077:5:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8077:23:8"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "8061:12:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "8152:12:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "8170:3:8"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8175:4:8",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8166:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8166:14:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_enum$_Side_$12_to_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "8113:38:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8113:68:8"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8113:68:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "8201:166:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "8238:43:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "8268:5:8"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8275:4:8",
                                "type": "",
                                "value": "0x60"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8264:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8264:16:8"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "8258:5:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8258:23:8"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "8242:12:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "8328:12:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "8346:3:8"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8351:4:8",
                                "type": "",
                                "value": "0x60"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8342:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8342:14:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_bytes32_to_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "8294:33:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8294:63:8"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8294:63:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "8377:166:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "8414:43:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "8444:5:8"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8451:4:8",
                                "type": "",
                                "value": "0x80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8440:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8440:16:8"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "8434:5:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8434:23:8"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "8418:12:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "8504:12:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "8522:3:8"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8527:4:8",
                                "type": "",
                                "value": "0x80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8518:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8518:14:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "8470:33:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8470:63:8"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8470:63:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "8553:165:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "8589:43:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "8619:5:8"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8626:4:8",
                                "type": "",
                                "value": "0xa0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8615:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8615:16:8"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "8609:5:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8609:23:8"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "8593:12:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "8679:12:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "8697:3:8"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8702:4:8",
                                "type": "",
                                "value": "0xa0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8693:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8693:14:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "8645:33:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8645:63:8"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8645:63:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_struct$_Order_$25_memory_ptr_to_t_struct$_Order_$25_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7615:5:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7622:3:8",
                "type": ""
              }
            ],
            "src": "7530:1195:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8786:53:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8803:3:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8826:5:8"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "8808:17:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8808:24:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8796:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8796:37:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8796:37:8"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8774:5:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8781:3:8",
                "type": ""
              }
            ],
            "src": "8731:108:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8910:53:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8927:3:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8950:5:8"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "8932:17:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8932:24:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8920:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8920:37:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8920:37:8"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8898:5:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8905:3:8",
                "type": ""
              }
            ],
            "src": "8845:118:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9067:124:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9077:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9089:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9100:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9085:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9085:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9077:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "9157:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9170:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9181:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9166:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9166:17:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9113:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9113:71:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9113:71:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9039:9:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9051:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9062:4:8",
                "type": ""
              }
            ],
            "src": "8969:222:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9387:267:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9397:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9409:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9420:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9405:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9405:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9397:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9444:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9455:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9440:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9440:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "9463:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9469:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9459:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9459:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9433:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9433:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9433:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9489:158:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "9633:6:8"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "9642:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_array$_t_struct$_Order_$25_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Order_$25_memory_ptr_$dyn_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9497:135:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9497:150:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9489:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_struct$_Order_$25_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Order_$25_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9359:9:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9371:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9382:4:8",
                "type": ""
              }
            ],
            "src": "9197:457:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9758:124:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9768:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9780:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9791:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9776:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9776:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9768:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "9848:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9861:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9872:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9857:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9857:17:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9804:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9804:71:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9804:71:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9730:9:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9742:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9753:4:8",
                "type": ""
              }
            ],
            "src": "9660:222:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10014:206:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10024:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10036:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10047:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10032:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10032:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10024:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "10104:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10117:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10128:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10113:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10113:17:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10060:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10060:71:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10060:71:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "10185:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10198:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10209:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10194:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10194:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10141:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10141:72:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10141:72:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9978:9:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "9990:6:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9998:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10009:4:8",
                "type": ""
              }
            ],
            "src": "9888:332:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10397:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10407:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10419:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10430:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10415:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10415:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10407:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10454:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10465:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10450:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10450:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "10473:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10479:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10469:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10469:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10443:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10443:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10443:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10499:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "10633:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_76da05e533ce8c94bd709e9147d4cfa7f84cac1a15886f38246d6deb5177fe61_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10507:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10507:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10499:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_76da05e533ce8c94bd709e9147d4cfa7f84cac1a15886f38246d6deb5177fe61__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10377:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10392:4:8",
                "type": ""
              }
            ],
            "src": "10226:419:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10822:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10832:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10844:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10855:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10840:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10840:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10832:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10879:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10890:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10875:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10875:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "10898:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10904:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10894:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10894:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10868:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10868:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10868:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10924:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "11058:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_b2e4c56c41e5356ec7e207a60af06952b71d2bb0dd8ce40ea66388e53e4e8652_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10932:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10932:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10924:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b2e4c56c41e5356ec7e207a60af06952b71d2bb0dd8ce40ea66388e53e4e8652__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10802:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10817:4:8",
                "type": ""
              }
            ],
            "src": "10651:419:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11247:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11257:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11269:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11280:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11265:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11265:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11257:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11304:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11315:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11300:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11300:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "11323:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11329:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11319:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11319:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11293:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11293:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11293:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11349:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "11483:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_be97154724c44ab4cd4d1f444e9ba13295d267756b33528c323b465c74416742_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11357:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11357:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11349:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_be97154724c44ab4cd4d1f444e9ba13295d267756b33528c323b465c74416742__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11227:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11242:4:8",
                "type": ""
              }
            ],
            "src": "11076:419:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11599:124:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11609:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11621:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11632:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11617:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11617:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11609:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "11689:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11702:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11713:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11698:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11698:17:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11645:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11645:71:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11645:71:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11571:9:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11583:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11594:4:8",
                "type": ""
              }
            ],
            "src": "11501:222:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11972:542:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11982:27:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11994:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12005:3:8",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11990:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11990:19:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11982:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "12063:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12076:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12087:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12072:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12072:17:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12019:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12019:71:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12019:71:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "12144:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12157:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12168:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12153:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12153:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12100:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12100:72:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12100:72:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "12231:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12244:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12255:2:8",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12240:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12240:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_enum$_Side_$12_to_t_uint8_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12182:48:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12182:77:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12182:77:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "12313:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12326:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12337:2:8",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12322:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12322:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12269:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12269:72:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12269:72:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "12395:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12408:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12419:3:8",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12404:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12404:19:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12351:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12351:73:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12351:73:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value5",
                        "nodeType": "YulIdentifier",
                        "src": "12478:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12491:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12502:3:8",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12487:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12487:19:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12434:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12434:73:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12434:73:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_address_t_enum$_Side_$12_t_bytes32_t_uint256_t_uint256__to_t_uint256_t_address_t_uint8_t_bytes32_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11904:9:8",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "11916:6:8",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "11924:6:8",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "11932:6:8",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "11940:6:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "11948:6:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11956:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11967:4:8",
                "type": ""
              }
            ],
            "src": "11729:785:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12613:60:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12623:11:8",
                  "value": {
                    "name": "ptr",
                    "nodeType": "YulIdentifier",
                    "src": "12631:3:8"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "12623:4:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12644:22:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "12656:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12661:4:8",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12652:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12652:14:8"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "12644:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "array_dataslot_t_array$_t_struct$_Order_$25_memory_ptr_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "12600:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "12608:4:8",
                "type": ""
              }
            ],
            "src": "12520:153:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12774:40:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12785:22:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "12801:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "12795:5:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12795:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "12785:6:8"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_array$_t_struct$_Order_$25_memory_ptr_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "12757:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "12767:6:8",
                "type": ""
              }
            ],
            "src": "12679:135:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12916:38:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12926:22:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "12938:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12943:4:8",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12934:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12934:14:8"
                  },
                  "variableNames": [
                    {
                      "name": "next",
                      "nodeType": "YulIdentifier",
                      "src": "12926:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "array_nextElement_t_array$_t_struct$_Order_$25_memory_ptr_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "12903:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "next",
                "nodeType": "YulTypedName",
                "src": "12911:4:8",
                "type": ""
              }
            ],
            "src": "12820:134:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13092:73:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13109:3:8"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "13114:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13102:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13102:19:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13102:19:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13130:29:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13149:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13154:4:8",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13145:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13145:14:8"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "13130:11:8"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_array$_t_struct$_Order_$25_memory_ptr_$dyn_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "13064:3:8",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "13069:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "13080:11:8",
                "type": ""
              }
            ],
            "src": "12960:205:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13267:73:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13284:3:8"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "13289:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13277:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13277:19:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13277:19:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13305:29:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13324:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13329:4:8",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13320:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13320:14:8"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "13305:11:8"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "13239:3:8",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "13244:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "13255:11:8",
                "type": ""
              }
            ],
            "src": "13171:169:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13391:51:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13401:35:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "13430:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "13412:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13412:24:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "13401:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "13373:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "13383:7:8",
                "type": ""
              }
            ],
            "src": "13346:96:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13493:32:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13503:16:8",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "13514:5:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "13503:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "13475:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "13485:7:8",
                "type": ""
              }
            ],
            "src": "13448:77:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13583:73:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13593:16:8",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "13604:5:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "13593:7:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "13644:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "validator_assert_t_enum$_Side_$12",
                      "nodeType": "YulIdentifier",
                      "src": "13610:33:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13610:40:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13610:40:8"
                }
              ]
            },
            "name": "cleanup_t_enum$_Side_$12",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "13565:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "13575:7:8",
                "type": ""
              }
            ],
            "src": "13531:125:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13707:81:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13717:65:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "13732:5:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13739:42:8",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "13728:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13728:54:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "13717:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "13689:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "13699:7:8",
                "type": ""
              }
            ],
            "src": "13662:126:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13839:32:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13849:16:8",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "13860:5:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "13849:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "13821:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "13831:7:8",
                "type": ""
              }
            ],
            "src": "13794:77:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13942:60:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13952:44:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "13990:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_enum$_Side_$12",
                      "nodeType": "YulIdentifier",
                      "src": "13965:24:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13965:31:8"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "13952:9:8"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_enum$_Side_$12_to_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "13922:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "13932:9:8",
                "type": ""
              }
            ],
            "src": "13877:125:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14031:25:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "functionName": {
                      "name": "invalid",
                      "nodeType": "YulIdentifier",
                      "src": "14041:7:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14041:9:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14041:9:8"
                }
              ]
            },
            "name": "panic_error",
            "nodeType": "YulFunctionDefinition",
            "src": "14008:48:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14112:57:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14146:17:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error",
                            "nodeType": "YulIdentifier",
                            "src": "14148:11:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14148:13:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14148:13:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "14135:5:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14142:1:8",
                            "type": "",
                            "value": "2"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "14132:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14132:12:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "14125:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14125:20:8"
                  },
                  "nodeType": "YulIf",
                  "src": "14122:2:8"
                }
              ]
            },
            "name": "validator_assert_t_enum$_Side_$12",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14105:5:8",
                "type": ""
              }
            ],
            "src": "14062:107:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14218:79:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14275:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14284:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14287:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "14277:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14277:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14277:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "14241:5:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "14266:5:8"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "14248:17:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14248:24:8"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "14238:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14238:35:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "14231:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14231:43:8"
                  },
                  "nodeType": "YulIf",
                  "src": "14228:2:8"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14211:5:8",
                "type": ""
              }
            ],
            "src": "14175:122:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14346:79:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14403:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14412:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14415:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "14405:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14405:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14405:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "14369:5:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "14394:5:8"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bytes32",
                              "nodeType": "YulIdentifier",
                              "src": "14376:17:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14376:24:8"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "14366:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14366:35:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "14359:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14359:43:8"
                  },
                  "nodeType": "YulIf",
                  "src": "14356:2:8"
                }
              ]
            },
            "name": "validator_revert_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14339:5:8",
                "type": ""
              }
            ],
            "src": "14303:122:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14481:56:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14515:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14524:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14527:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "14517:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14517:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14517:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "14504:5:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14511:1:8",
                            "type": "",
                            "value": "2"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "14501:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14501:12:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "14494:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14494:20:8"
                  },
                  "nodeType": "YulIf",
                  "src": "14491:2:8"
                }
              ]
            },
            "name": "validator_revert_t_enum$_Side_$12",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14474:5:8",
                "type": ""
              }
            ],
            "src": "14431:106:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14586:79:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14643:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14652:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14655:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "14645:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14645:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14645:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "14609:5:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "14634:5:8"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "14616:17:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14616:24:8"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "14606:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14606:35:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "14599:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14599:43:8"
                  },
                  "nodeType": "YulIf",
                  "src": "14596:2:8"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14579:5:8",
                "type": ""
              }
            ],
            "src": "14543:122:8"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_t_enum$_Side_$12(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_enum$_Side_$12(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_bytes32(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_enum$_Side_$12(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_enum$_Side_$12(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_enum$_Side_$12t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_enum$_Side_$12(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_bytes32(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_Order_$25_memory_ptr_to_t_struct$_Order_$25_memory_ptr(value0, pos) -> updatedPos {\n        abi_encode_t_struct$_Order_$25_memory_ptr_to_t_struct$_Order_$25_memory_ptr(value0, pos)\n        updatedPos := add(pos, 0xc0)\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // struct Dex.Order[] -> struct Dex.Order[]\n    function abi_encode_t_array$_t_struct$_Order_$25_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Order_$25_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_Order_$25_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_Order_$25_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_struct$_Order_$25_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_struct$_Order_$25_memory_ptr_to_t_struct$_Order_$25_memory_ptr(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_struct$_Order_$25_memory_ptr_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_enum$_Side_$12_to_t_uint8(value, pos) {\n        mstore(pos, convert_t_enum$_Side_$12_to_t_uint8(value))\n    }\n\n    function abi_encode_t_enum$_Side_$12_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_Side_$12_to_t_uint8(value))\n    }\n\n    function abi_encode_t_stringliteral_76da05e533ce8c94bd709e9147d4cfa7f84cac1a15886f38246d6deb5177fe61_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 49)\n\n        mstore(add(pos, 0), \"Amount must be less than or equa\")\n\n        mstore(add(pos, 32), \"l to balance sold\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_b2e4c56c41e5356ec7e207a60af06952b71d2bb0dd8ce40ea66388e53e4e8652_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n\n        mstore(add(pos, 0), \"Insufficient funds to place buy \")\n\n        mstore(add(pos, 32), \"order\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_be97154724c44ab4cd4d1f444e9ba13295d267756b33528c323b465c74416742_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 56)\n\n        mstore(add(pos, 0), \"Must supply a non-zero amount yo\")\n\n        mstore(add(pos, 32), \"u would like to buy/sell\")\n\n        end := add(pos, 64)\n    }\n\n    // struct Dex.Order -> struct Dex.Order\n    function abi_encode_t_struct$_Order_$25_memory_ptr_to_t_struct$_Order_$25_memory_ptr(value, pos)  {\n        let tail := add(pos, 0xc0)\n\n        {\n            // id\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // trader\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // side\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_enum$_Side_$12_to_t_uint8(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // ticker\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_bytes32_to_t_bytes32(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // amount\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // price\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_Order_$25_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Order_$25_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_Order_$25_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Order_$25_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_76da05e533ce8c94bd709e9147d4cfa7f84cac1a15886f38246d6deb5177fe61__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_76da05e533ce8c94bd709e9147d4cfa7f84cac1a15886f38246d6deb5177fe61_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b2e4c56c41e5356ec7e207a60af06952b71d2bb0dd8ce40ea66388e53e4e8652__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b2e4c56c41e5356ec7e207a60af06952b71d2bb0dd8ce40ea66388e53e4e8652_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_be97154724c44ab4cd4d1f444e9ba13295d267756b33528c323b465c74416742__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_be97154724c44ab4cd4d1f444e9ba13295d267756b33528c323b465c74416742_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_t_enum$_Side_$12_t_bytes32_t_uint256_t_uint256__to_t_uint256_t_address_t_uint8_t_bytes32_t_uint256_t_uint256__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_enum$_Side_$12_to_t_uint8_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function array_dataslot_t_array$_t_struct$_Order_$25_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_array$_t_struct$_Order_$25_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_nextElement_t_array$_t_struct$_Order_$25_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_Order_$25_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_enum$_Side_$12(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_Side_$12(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_enum$_Side_$12_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_Side_$12(value)\n    }\n\n    function panic_error() {\n        invalid()\n    }\n\n    function validator_assert_t_enum$_Side_$12(value) {\n        if iszero(lt(value, 2)) { panic_error() }\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_enum$_Side_$12(value) {\n        if iszero(lt(value, 2)) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 8,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "151:2330:0:-:0;;;443:1;414:30;;151:2330;;;;;;;;;;882:17:4;902:12;:10;;;:12;;:::i;:::-;882:32;;933:9;924:6;;:18;;;;;;;;;;;;;;;;;;990:9;957:43;;986:1;957:43;;;;;;;;;;;;848:159;151:2330:0;;598:104:3;651:15;685:10;678:17;;598:104;:::o;151:2330:0:-;;;;;;;",
  "deployedSourceMap": "151:2330:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;453:64;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;491:63:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;414:30:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1454:152:2;;;:::i;:::-;;404:45;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1706:145:4;;;;;;;;;;;;;:::i;:::-;;1083:77;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;755:343:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;456:26;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1614:395;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;526:176:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1106:340:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;710:997:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2000:240:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;453:64:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;491:63:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;414:30:0:-;;;;:::o;1454:152:2:-;1532:66;1578:9;1532:8;:20;1541:10;1532:20;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;:31;;:66;;;;:::i;:::-;1502:8;:20;1511:10;1502:20;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;:96;;;;1454:152::o;404:45::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1706:145:4:-;1297:12;:10;:12::i;:::-;1287:22;;:6;;;;;;;;;;:22;;;1279:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1812:1:::1;1775:40;;1796:6;::::0;::::1;;;;;;;;1775:40;;;;;;;;;;;;1842:1;1825:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1706:145::o:0;1083:77::-;1121:7;1147:6;;;;;;;;;;;1140:13;;1083:77;:::o;755:343:2:-;1297:12:4;:10;:12::i;:::-;1287:22;;:6;;;;;;;;;;:22;;;1279:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;933:1:2::1;888:47;;:12;:20;901:6;888:20;;;;;;;;;;;:33;;;;;;;;;;;;:47;;;866:128;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;1030:27;;;;;;;;1036:6;1030:27;;;;1044:12;1030:27;;;;::::0;1007:12:::1;:20;1020:6;1007:20;;;;;;;;;;;:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1068:9;1083:6;1068:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;755:343:::0;;:::o;456:26::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1614:395::-;1702:6;677:1;632:47;;:12;:20;645:6;632:20;;;;;;;;;;;:33;;;;;;;;;;;;:47;;;;610:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1780:6:::1;1748:8;:20;1757:10;1748:20;;;;;;;;;;;;;;;:28;1769:6;1748:28;;;;;;;;;;;;:38;;1726:110;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;1880:40;1913:6;1880:8;:20;1889:10;1880:20;;;;;;;;;;;;;;;:28;1901:6;1880:28;;;;;;;;;;;;:32;;:40;;;;:::i;:::-;1849:8;:20;1858:10;1849:20;;;;;;;;;;;;;;;:28;1870:6;1849:28;;;;;;;;;;;:71;;;;1938:12;:20;1951:6;1938:20;;;;;;;;;;;:33;;;;;;;;;;;;1931:50;;;1982:10;1994:6;1931:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;1614:395:::0;;;:::o;526:176:0:-;623:14;662:9;:17;672:6;662:17;;;;;;;;;;;:32;688:4;680:13;;;;;;;;662:32;;;;;;;;;;;655:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;526:176;;;;:::o;1106:340:2:-;1193:6;677:1;632:47;;:12;:20;645:6;632:20;;;;;;;;;;;:33;;;;;;;;;;;;:47;;;;610:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1248:40:::1;1281:6;1248:8;:20;1257:10;1248:20;;;;;;;;;;;;;;;:28;1269:6;1248:28;;;;;;;;;;;;:32;;:40;;;;:::i;:::-;1217:8;:20;1226:10;1217:20;;;;;;;;;;;;;;;:28;1238:6;1217:28;;;;;;;;;;;:71;;;;1306:12;:20;1319:6;1306:20;;;;;;;;;;;:33;;;;;;;;;;;;1299:54;;;1368:10;1401:4;1421:6;1299:139;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;1106:340:::0;;;:::o;710:997:0:-;887:1;877:6;:11;;855:117;;;;;;;;;;;;:::i;:::-;;;;;;;;;995:8;987:16;;;;;;;;:4;:16;;;;;;;;;983:401;;;1077:17;1088:5;1077:6;:10;;:17;;;;:::i;:::-;1046:8;:20;1055:10;1046:20;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;:48;;1020:147;;;;;;;;;;;;:::i;:::-;;;;;;;;;983:401;;;1197:9;1189:17;;;;;;;;:4;:17;;;;;;;;;1185:199;;;1281:6;1249:8;:20;1258:10;1249:20;;;;;;;;;;;;;;;:28;1270:6;1249:28;;;;;;;;;;;;:38;;1223:149;;;;;;;;;;;;:::i;:::-;;;;;;;;;1185:199;983:401;1396:22;1421:9;:17;1431:6;1421:17;;;;;;;;;;;:32;1447:4;1439:13;;;;;;;;1421:32;;;;;;;;;;;1396:57;;1464:6;1490:59;;;;;;;;1496:11;;1490:59;;;;1509:10;1490:59;;;;;;1521:4;1490:59;;;;;;;;;;;;1527:6;1490:59;;;;1535:6;1490:59;;;;1543:5;1490:59;;;1464:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1617:1;1601:6;:13;;;;:17;1597:77;;;1635:27;1649:6;1657:4;1635:13;:27::i;:::-;1597:77;1686:11;;:13;;;;;;;;;;;;;710:997;;;;;:::o;2000:240:4:-;1297:12;:10;:12::i;:::-;1287:22;;:6;;;;;;;;;;:22;;;1279:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2108:1:::1;2088:22;;:8;:22;;;;2080:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2197:8;2168:38;;2189:6;::::0;::::1;;;;;;;;2168:38;;;;;;;;;;;;2225:8;2216:6;::::0;:17:::1;;;;;;;;;;;;;;;;;;2000:240:::0;:::o;882:176:5:-;940:7;959:9;975:1;971;:5;959:17;;999:1;994;:6;;986:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1050:1;1043:8;;;882:176;;;;:::o;598:104:3:-;651:15;685:10;678:17;;598:104;:::o;1329:134:5:-;1387:7;1413:43;1417:1;1420;1413:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1406:50;;1329:134;;;;:::o;2188:459::-;2246:7;2492:1;2487;:6;2483:45;;;2516:1;2509:8;;;;2483:45;2538:9;2554:1;2550;:5;2538:17;;2582:1;2577;2573;:5;;;;;;:10;2565:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2639:1;2632:8;;;2188:459;;;;;:::o;1715:763:0:-;1804:8;1796:16;;;;;;;;:4;:16;;;;;;;;;1792:679;;;1834:9;1862:1;1846:6;:13;;;;:17;1834:29;;1829:288;1869:1;1865;:5;1829:288;;;1918:6;1929:1;1925;:5;1918:13;;;;;;;;;;;;;;;;;;:19;;;1900:6;1907:1;1900:9;;;;;;;;;;;;;;;;;;:15;;;:37;1896:206;;;1962:17;1982:6;1993:1;1989;:5;1982:13;;;;;;;;;;;;;;;;;;1962:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2034:6;2041:1;2034:9;;;;;;;;;;;;;;;;;;2018:6;2029:1;2025;:5;2018:13;;;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2078:4;2066:6;2073:1;2066:9;;;;;;;;;;;;;;;;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1896:206;;1872:3;;;;;;;;1829:288;;;;1792:679;;;2146:9;2138:17;;;;;;;;:4;:17;;;;;;;;;2134:337;;;2177:9;2205:1;2189:6;:13;;;;:17;2177:29;;2172:288;2212:1;2208;:5;2172:288;;;2261:6;2272:1;2268;:5;2261:13;;;;;;;;;;;;;;;;;;:19;;;2243:6;2250:1;2243:9;;;;;;;;;;;;;;;;;;:15;;;:37;2239:206;;;2305:17;2325:6;2336:1;2332;:5;2325:13;;;;;;;;;;;;;;;;;;2305:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2377:6;2384:1;2377:9;;;;;;;;;;;;;;;;;;2361:6;2372:1;2368;:5;2361:13;;;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2421:4;2409:6;2416:1;2409:9;;;;;;;;;;;;;;;;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2239:206;;2215:3;;;;;;;;2172:288;;;;2134:337;1792:679;1715:763;;:::o;1754:187:5:-;1840:7;1872:1;1867;:6;;1875:12;1859:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1898:9;1914:1;1910;:5;1898:17;;1933:1;1926:8;;;1754:187;;;;;:::o;7:139:8:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:139::-;;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;204:87;;;;:::o;297:153::-;;388:6;375:20;366:29;;404:40;438:5;404:40;:::i;:::-;356:94;;;;:::o;456:139::-;;540:6;527:20;518:29;;556:33;583:5;556:33;:::i;:::-;508:87;;;;:::o;601:262::-;;709:2;697:9;688:7;684:23;680:32;677:2;;;725:1;722;715:12;677:2;768:1;793:53;838:7;829:6;818:9;814:22;793:53;:::i;:::-;783:63;;739:117;667:196;;;;:::o;869:407::-;;;994:2;982:9;973:7;969:23;965:32;962:2;;;1010:1;1007;1000:12;962:2;1053:1;1078:53;1123:7;1114:6;1103:9;1099:22;1078:53;:::i;:::-;1068:63;;1024:117;1180:2;1206:53;1251:7;1242:6;1231:9;1227:22;1206:53;:::i;:::-;1196:63;;1151:118;952:324;;;;;:::o;1282:262::-;;1390:2;1378:9;1369:7;1365:23;1361:32;1358:2;;;1406:1;1403;1396:12;1358:2;1449:1;1474:53;1519:7;1510:6;1499:9;1495:22;1474:53;:::i;:::-;1464:63;;1420:117;1348:196;;;;:::o;1550:407::-;;;1675:2;1663:9;1654:7;1650:23;1646:32;1643:2;;;1691:1;1688;1681:12;1643:2;1734:1;1759:53;1804:7;1795:6;1784:9;1780:22;1759:53;:::i;:::-;1749:63;;1705:117;1861:2;1887:53;1932:7;1923:6;1912:9;1908:22;1887:53;:::i;:::-;1877:63;;1832:118;1633:324;;;;;:::o;1963:421::-;;;2095:2;2083:9;2074:7;2070:23;2066:32;2063:2;;;2111:1;2108;2101:12;2063:2;2154:1;2179:53;2224:7;2215:6;2204:9;2200:22;2179:53;:::i;:::-;2169:63;;2125:117;2281:2;2307:60;2359:7;2350:6;2339:9;2335:22;2307:60;:::i;:::-;2297:70;;2252:125;2053:331;;;;;:::o;2390:712::-;;;;;2556:3;2544:9;2535:7;2531:23;2527:33;2524:2;;;2573:1;2570;2563:12;2524:2;2616:1;2641:53;2686:7;2677:6;2666:9;2662:22;2641:53;:::i;:::-;2631:63;;2587:117;2743:2;2769:60;2821:7;2812:6;2801:9;2797:22;2769:60;:::i;:::-;2759:70;;2714:125;2878:2;2904:53;2949:7;2940:6;2929:9;2925:22;2904:53;:::i;:::-;2894:63;;2849:118;3006:2;3032:53;3077:7;3068:6;3057:9;3053:22;3032:53;:::i;:::-;3022:63;;2977:118;2514:588;;;;;;;:::o;3108:552::-;;;;3250:2;3238:9;3229:7;3225:23;3221:32;3218:2;;;3266:1;3263;3256:12;3218:2;3309:1;3334:53;3379:7;3370:6;3359:9;3355:22;3334:53;:::i;:::-;3324:63;;3280:117;3436:2;3462:53;3507:7;3498:6;3487:9;3483:22;3462:53;:::i;:::-;3452:63;;3407:118;3564:2;3590:53;3635:7;3626:6;3615:9;3611:22;3590:53;:::i;:::-;3580:63;;3535:118;3208:452;;;;;:::o;3666:262::-;;3774:2;3762:9;3753:7;3749:23;3745:32;3742:2;;;3790:1;3787;3780:12;3742:2;3833:1;3858:53;3903:7;3894:6;3883:9;3879:22;3858:53;:::i;:::-;3848:63;;3804:117;3732:196;;;;:::o;3934:407::-;;;4059:2;4047:9;4038:7;4034:23;4030:32;4027:2;;;4075:1;4072;4065:12;4027:2;4118:1;4143:53;4188:7;4179:6;4168:9;4164:22;4143:53;:::i;:::-;4133:63;;4089:117;4245:2;4271:53;4316:7;4307:6;4296:9;4292:22;4271:53;:::i;:::-;4261:63;;4216:118;4017:324;;;;;:::o;4347:263::-;;4479:88;4563:3;4555:6;4479:88;:::i;:::-;4599:4;4594:3;4590:14;4576:28;;4469:141;;;;:::o;4616:108::-;4693:24;4711:5;4693:24;:::i;:::-;4688:3;4681:37;4671:53;;:::o;4730:118::-;4817:24;4835:5;4817:24;:::i;:::-;4812:3;4805:37;4795:53;;:::o;4902:900::-;;5092:75;5161:5;5092:75;:::i;:::-;5183:107;5283:6;5278:3;5183:107;:::i;:::-;5176:114;;5314:77;5385:5;5314:77;:::i;:::-;5414:7;5445:1;5430:347;5455:6;5452:1;5449:13;5430:347;;;5531:6;5525:13;5558:105;5659:3;5644:13;5558:105;:::i;:::-;5551:112;;5686:81;5760:6;5686:81;:::i;:::-;5676:91;;5490:287;5477:1;5474;5470:9;5465:14;;5430:347;;;5434:14;5793:3;5786:10;;5068:734;;;;;;;:::o;5808:108::-;5885:24;5903:5;5885:24;:::i;:::-;5880:3;5873:37;5863:53;;:::o;5922:118::-;6009:24;6027:5;6009:24;:::i;:::-;6004:3;5997:37;5987:53;;:::o;6046:131::-;6128:42;6164:5;6128:42;:::i;:::-;6123:3;6116:55;6106:71;;:::o;6183:141::-;6275:42;6311:5;6275:42;:::i;:::-;6270:3;6263:55;6253:71;;:::o;6330:381::-;;6493:67;6557:2;6552:3;6493:67;:::i;:::-;6486:74;;6590:34;6586:1;6581:3;6577:11;6570:55;6656:19;6651:2;6646:3;6642:12;6635:41;6702:2;6697:3;6693:12;6686:19;;6476:235;;;:::o;6717:369::-;;6880:67;6944:2;6939:3;6880:67;:::i;:::-;6873:74;;6977:34;6973:1;6968:3;6964:11;6957:55;7043:7;7038:2;7033:3;7029:12;7022:29;7077:2;7072:3;7068:12;7061:19;;6863:223;;;:::o;7092:388::-;;7255:67;7319:2;7314:3;7255:67;:::i;:::-;7248:74;;7352:34;7348:1;7343:3;7339:11;7332:55;7418:26;7413:2;7408:3;7404:12;7397:48;7471:2;7466:3;7462:12;7455:19;;7238:242;;;:::o;7530:1195::-;7659:4;7654:3;7650:14;7744:4;7737:5;7733:16;7727:23;7763:63;7820:4;7815:3;7811:14;7797:12;7763:63;:::i;:::-;7674:162;7920:4;7913:5;7909:16;7903:23;7939:63;7996:4;7991:3;7987:14;7973:12;7939:63;:::i;:::-;7846:166;8094:4;8087:5;8083:16;8077:23;8113:68;8175:4;8170:3;8166:14;8152:12;8113:68;:::i;:::-;8022:169;8275:4;8268:5;8264:16;8258:23;8294:63;8351:4;8346:3;8342:14;8328:12;8294:63;:::i;:::-;8201:166;8451:4;8444:5;8440:16;8434:23;8470:63;8527:4;8522:3;8518:14;8504:12;8470:63;:::i;:::-;8377:166;8626:4;8619:5;8615:16;8609:23;8645:63;8702:4;8697:3;8693:14;8679:12;8645:63;:::i;:::-;8553:165;7628:1097;;;:::o;8731:108::-;8808:24;8826:5;8808:24;:::i;:::-;8803:3;8796:37;8786:53;;:::o;8845:118::-;8932:24;8950:5;8932:24;:::i;:::-;8927:3;8920:37;8910:53;;:::o;8969:222::-;;9100:2;9089:9;9085:18;9077:26;;9113:71;9181:1;9170:9;9166:17;9157:6;9113:71;:::i;:::-;9067:124;;;;:::o;9197:457::-;;9420:2;9409:9;9405:18;9397:26;;9469:9;9463:4;9459:20;9455:1;9444:9;9440:17;9433:47;9497:150;9642:4;9633:6;9497:150;:::i;:::-;9489:158;;9387:267;;;;:::o;9660:222::-;;9791:2;9780:9;9776:18;9768:26;;9804:71;9872:1;9861:9;9857:17;9848:6;9804:71;:::i;:::-;9758:124;;;;:::o;9888:332::-;;10047:2;10036:9;10032:18;10024:26;;10060:71;10128:1;10117:9;10113:17;10104:6;10060:71;:::i;:::-;10141:72;10209:2;10198:9;10194:18;10185:6;10141:72;:::i;:::-;10014:206;;;;;:::o;10226:419::-;;10430:2;10419:9;10415:18;10407:26;;10479:9;10473:4;10469:20;10465:1;10454:9;10450:17;10443:47;10507:131;10633:4;10507:131;:::i;:::-;10499:139;;10397:248;;;:::o;10651:419::-;;10855:2;10844:9;10840:18;10832:26;;10904:9;10898:4;10894:20;10890:1;10879:9;10875:17;10868:47;10932:131;11058:4;10932:131;:::i;:::-;10924:139;;10822:248;;;:::o;11076:419::-;;11280:2;11269:9;11265:18;11257:26;;11329:9;11323:4;11319:20;11315:1;11304:9;11300:17;11293:47;11357:131;11483:4;11357:131;:::i;:::-;11349:139;;11247:248;;;:::o;11501:222::-;;11632:2;11621:9;11617:18;11609:26;;11645:71;11713:1;11702:9;11698:17;11689:6;11645:71;:::i;:::-;11599:124;;;;:::o;11729:785::-;;12005:3;11994:9;11990:19;11982:27;;12019:71;12087:1;12076:9;12072:17;12063:6;12019:71;:::i;:::-;12100:72;12168:2;12157:9;12153:18;12144:6;12100:72;:::i;:::-;12182:77;12255:2;12244:9;12240:18;12231:6;12182:77;:::i;:::-;12269:72;12337:2;12326:9;12322:18;12313:6;12269:72;:::i;:::-;12351:73;12419:3;12408:9;12404:19;12395:6;12351:73;:::i;:::-;12434;12502:3;12491:9;12487:19;12478:6;12434:73;:::i;:::-;11972:542;;;;;;;;;:::o;12520:153::-;;12631:3;12623:11;;12661:4;12656:3;12652:14;12644:22;;12613:60;;;:::o;12679:135::-;;12801:5;12795:12;12785:22;;12774:40;;;:::o;12820:134::-;;12943:4;12938:3;12934:14;12926:22;;12916:38;;;:::o;12960:205::-;;13114:6;13109:3;13102:19;13154:4;13149:3;13145:14;13130:29;;13092:73;;;;:::o;13171:169::-;;13289:6;13284:3;13277:19;13329:4;13324:3;13320:14;13305:29;;13267:73;;;;:::o;13346:96::-;;13412:24;13430:5;13412:24;:::i;:::-;13401:35;;13391:51;;;:::o;13448:77::-;;13514:5;13503:16;;13493:32;;;:::o;13531:125::-;;13604:5;13593:16;;13610:40;13644:5;13610:40;:::i;:::-;13583:73;;;:::o;13662:126::-;;13739:42;13732:5;13728:54;13717:65;;13707:81;;;:::o;13794:77::-;;13860:5;13849:16;;13839:32;;;:::o;13877:125::-;;13965:31;13990:5;13965:31;:::i;:::-;13952:44;;13942:60;;;:::o;14008:48::-;14041:9;14062:107;14142:1;14135:5;14132:12;14122:2;;14148:13;;:::i;:::-;14122:2;14112:57;:::o;14175:122::-;14248:24;14266:5;14248:24;:::i;:::-;14241:5;14238:35;14228:2;;14287:1;14284;14277:12;14228:2;14218:79;:::o;14303:122::-;14376:24;14394:5;14376:24;:::i;:::-;14369:5;14366:35;14356:2;;14415:1;14412;14405:12;14356:2;14346:79;:::o;14431:106::-;14511:1;14504:5;14501:12;14491:2;;14527:1;14524;14517:12;14491:2;14481:56;:::o;14543:122::-;14616:24;14634:5;14616:24;:::i;:::-;14609:5;14606:35;14596:2;;14655:1;14652;14645:12;14596:2;14586:79;:::o",
  "source": "pragma solidity >=0.6.0 <0.8.0;\r\npragma abicoder v2;\r\n\r\nimport \"./Wallet.sol\";\r\nimport \"../node_modules/@openzeppelin/contracts/math/SafeMath.sol\";\r\n\r\ncontract Dex is Wallet {\r\n    using SafeMath for uint256;\r\n\r\n    enum Side {BUY, SELL}\r\n\r\n    struct Order {\r\n        uint256 id;\r\n        address trader;\r\n        Side side;\r\n        bytes32 ticker;\r\n        uint256 amount;\r\n        uint256 price;\r\n    }\r\n\r\n    uint256 public nextOrderId = 0;\r\n\r\n    mapping(bytes32 => mapping(uint256 => Order[])) public orderBook;\r\n\r\n    function getOrderBook(bytes32 ticker, Side side)\r\n        public\r\n        view\r\n        returns (Order[] memory)\r\n    {\r\n        return orderBook[ticker][uint256(side)];\r\n    }\r\n\r\n    function createLimitOrder(\r\n        bytes32 ticker,\r\n        Side side,\r\n        uint256 amount,\r\n        uint256 price\r\n    ) public {\r\n        require(\r\n            amount >= 0,\r\n            \"Must supply a non-zero amount you would like to buy/sell\"\r\n        );\r\n        if (side == Side.BUY) {\r\n            require(\r\n                balances[msg.sender][\"ETH\"] >= amount.mul(price),\r\n                \"Insufficient funds to place buy order\"\r\n            );\r\n        } else if (side == Side.SELL) {\r\n            require(\r\n                balances[msg.sender][ticker] >= amount,\r\n                \"Amount must be less than or equal to balance sold\"\r\n            );\r\n        }\r\n\r\n        Order[] storage orders = orderBook[ticker][uint256(side)];\r\n        orders.push(\r\n            Order(nextOrderId, msg.sender, side, ticker, amount, price)\r\n        );\r\n\r\n        // Bubble sort\r\n        if (orders.length > 0) {\r\n            sortOrderBook(orders, side);\r\n        }\r\n\r\n        nextOrderId++;\r\n    }\r\n\r\n    function sortOrderBook(Order[] storage orders, Side side) private {\r\n        if (side == Side.BUY) {\r\n            for (uint256 i = orders.length - 1; i > 0; i--) {\r\n                if (orders[i].price > orders[i - 1].price) {\r\n                    Order memory temp = orders[i - 1];\r\n                    orders[i - 1] = orders[i];\r\n                    orders[i] = temp;\r\n                }\r\n            }\r\n        } else if (side == Side.SELL) {\r\n            for (uint256 i = orders.length - 1; i > 0; i--) {\r\n                if (orders[i].price < orders[i - 1].price) {\r\n                    Order memory temp = orders[i - 1];\r\n                    orders[i - 1] = orders[i];\r\n                    orders[i] = temp;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n",
  "sourcePath": "D:/Ivan On Tech Academy/Ethereum Programming 201/2021/DEX/contracts/Dex.sol",
  "ast": {
    "absolutePath": "/D/Ivan On Tech Academy/Ethereum Programming 201/2021/DEX/contracts/Dex.sol",
    "exportedSymbols": {
      "Context": [
        527
      ],
      "Dex": [
        280
      ],
      "IERC20": [
        1413
      ],
      "Ownable": [
        636
      ],
      "SafeMath": [
        832
      ],
      "Wallet": [
        504
      ]
    },
    "id": 281,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0",
          "<",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:31:0"
      },
      {
        "id": 2,
        "literals": [
          "abicoder",
          "v2"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:19:0"
      },
      {
        "absolutePath": "/D/Ivan On Tech Academy/Ethereum Programming 201/2021/DEX/contracts/Wallet.sol",
        "file": "./Wallet.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 281,
        "sourceUnit": 505,
        "src": "56:22:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/Ivan On Tech Academy/Ethereum Programming 201/2021/DEX/node_modules/@openzeppelin/contracts/math/SafeMath.sol",
        "file": "../node_modules/@openzeppelin/contracts/math/SafeMath.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 281,
        "sourceUnit": 833,
        "src": "80:67:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5,
              "name": "Wallet",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 504,
              "src": "167:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Wallet_$504",
                "typeString": "contract Wallet"
              }
            },
            "id": 6,
            "nodeType": "InheritanceSpecifier",
            "src": "167:6:0"
          }
        ],
        "contractDependencies": [
          504,
          527,
          636
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 280,
        "linearizedBaseContracts": [
          280,
          504,
          636,
          527
        ],
        "name": "Dex",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 9,
            "libraryName": {
              "id": 7,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 832,
              "src": "187:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$832",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "181:27:0",
            "typeName": {
              "id": 8,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "200:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "canonicalName": "Dex.Side",
            "id": 12,
            "members": [
              {
                "id": 10,
                "name": "BUY",
                "nodeType": "EnumValue",
                "src": "227:3:0"
              },
              {
                "id": 11,
                "name": "SELL",
                "nodeType": "EnumValue",
                "src": "232:4:0"
              }
            ],
            "name": "Side",
            "nodeType": "EnumDefinition",
            "src": "216:21:0"
          },
          {
            "canonicalName": "Dex.Order",
            "id": 25,
            "members": [
              {
                "constant": false,
                "id": 14,
                "mutability": "mutable",
                "name": "id",
                "nodeType": "VariableDeclaration",
                "scope": 25,
                "src": "269:10:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 13,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "269:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 16,
                "mutability": "mutable",
                "name": "trader",
                "nodeType": "VariableDeclaration",
                "scope": 25,
                "src": "290:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 15,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "290:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 18,
                "mutability": "mutable",
                "name": "side",
                "nodeType": "VariableDeclaration",
                "scope": 25,
                "src": "315:9:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_Side_$12",
                  "typeString": "enum Dex.Side"
                },
                "typeName": {
                  "id": 17,
                  "name": "Side",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 12,
                  "src": "315:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Side_$12",
                    "typeString": "enum Dex.Side"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 20,
                "mutability": "mutable",
                "name": "ticker",
                "nodeType": "VariableDeclaration",
                "scope": 25,
                "src": "335:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 19,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "335:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 22,
                "mutability": "mutable",
                "name": "amount",
                "nodeType": "VariableDeclaration",
                "scope": 25,
                "src": "360:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 21,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "360:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 24,
                "mutability": "mutable",
                "name": "price",
                "nodeType": "VariableDeclaration",
                "scope": 25,
                "src": "385:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 23,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "385:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Order",
            "nodeType": "StructDefinition",
            "scope": 280,
            "src": "245:161:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2a58b330",
            "id": 28,
            "mutability": "mutable",
            "name": "nextOrderId",
            "nodeType": "VariableDeclaration",
            "scope": 280,
            "src": "414:30:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 26,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "414:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 27,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "443:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0bb431b6",
            "id": 35,
            "mutability": "mutable",
            "name": "orderBook",
            "nodeType": "VariableDeclaration",
            "scope": 280,
            "src": "453:64:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_array$_t_struct$_Order_$25_storage_$dyn_storage_$_$",
              "typeString": "mapping(bytes32 => mapping(uint256 => struct Dex.Order[]))"
            },
            "typeName": {
              "id": 34,
              "keyType": {
                "id": 29,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "461:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "453:47:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_array$_t_struct$_Order_$25_storage_$dyn_storage_$_$",
                "typeString": "mapping(bytes32 => mapping(uint256 => struct Dex.Order[]))"
              },
              "valueType": {
                "id": 33,
                "keyType": {
                  "id": 30,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "480:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "472:27:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_Order_$25_storage_$dyn_storage_$",
                  "typeString": "mapping(uint256 => struct Dex.Order[])"
                },
                "valueType": {
                  "baseType": {
                    "id": 31,
                    "name": "Order",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 25,
                    "src": "491:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Order_$25_storage_ptr",
                      "typeString": "struct Dex.Order"
                    }
                  },
                  "id": 32,
                  "nodeType": "ArrayTypeName",
                  "src": "491:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Order_$25_storage_$dyn_storage_ptr",
                    "typeString": "struct Dex.Order[]"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 54,
              "nodeType": "Block",
              "src": "644:58:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 45,
                        "name": "orderBook",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35,
                        "src": "662:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_array$_t_struct$_Order_$25_storage_$dyn_storage_$_$",
                          "typeString": "mapping(bytes32 => mapping(uint256 => struct Dex.Order storage ref[] storage ref))"
                        }
                      },
                      "id": 47,
                      "indexExpression": {
                        "id": 46,
                        "name": "ticker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37,
                        "src": "672:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "662:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_Order_$25_storage_$dyn_storage_$",
                        "typeString": "mapping(uint256 => struct Dex.Order storage ref[] storage ref)"
                      }
                    },
                    "id": 52,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 50,
                          "name": "side",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39,
                          "src": "688:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Side_$12",
                            "typeString": "enum Dex.Side"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_enum$_Side_$12",
                            "typeString": "enum Dex.Side"
                          }
                        ],
                        "id": 49,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "680:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 48,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "680:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 51,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "680:13:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "662:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Order_$25_storage_$dyn_storage",
                      "typeString": "struct Dex.Order storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 44,
                  "id": 53,
                  "nodeType": "Return",
                  "src": "655:39:0"
                }
              ]
            },
            "functionSelector": "ba58ea68",
            "id": 55,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOrderBook",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 40,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37,
                  "mutability": "mutable",
                  "name": "ticker",
                  "nodeType": "VariableDeclaration",
                  "scope": 55,
                  "src": "548:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 36,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "548:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39,
                  "mutability": "mutable",
                  "name": "side",
                  "nodeType": "VariableDeclaration",
                  "scope": 55,
                  "src": "564:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Side_$12",
                    "typeString": "enum Dex.Side"
                  },
                  "typeName": {
                    "id": 38,
                    "name": "Side",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 12,
                    "src": "564:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Side_$12",
                      "typeString": "enum Dex.Side"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "547:27:0"
            },
            "returnParameters": {
              "id": 44,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 55,
                  "src": "623:14:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Order_$25_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Dex.Order[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 41,
                      "name": "Order",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 25,
                      "src": "623:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Order_$25_storage_ptr",
                        "typeString": "struct Dex.Order"
                      }
                    },
                    "id": 42,
                    "nodeType": "ArrayTypeName",
                    "src": "623:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Order_$25_storage_$dyn_storage_ptr",
                      "typeString": "struct Dex.Order[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "622:16:0"
            },
            "scope": 280,
            "src": "526:176:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 153,
              "nodeType": "Block",
              "src": "844:863:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 69,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 67,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61,
                          "src": "877:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 68,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "887:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "877:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d75737420737570706c792061206e6f6e2d7a65726f20616d6f756e7420796f7520776f756c64206c696b6520746f206275792f73656c6c",
                        "id": 70,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "903:58:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_be97154724c44ab4cd4d1f444e9ba13295d267756b33528c323b465c74416742",
                          "typeString": "literal_string \"Must supply a non-zero amount you would like to buy/sell\""
                        },
                        "value": "Must supply a non-zero amount you would like to buy/sell"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_be97154724c44ab4cd4d1f444e9ba13295d267756b33528c323b465c74416742",
                          "typeString": "literal_string \"Must supply a non-zero amount you would like to buy/sell\""
                        }
                      ],
                      "id": 66,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "855:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 71,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "855:117:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 72,
                  "nodeType": "ExpressionStatement",
                  "src": "855:117:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_Side_$12",
                      "typeString": "enum Dex.Side"
                    },
                    "id": 76,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 73,
                      "name": "side",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59,
                      "src": "987:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Side_$12",
                        "typeString": "enum Dex.Side"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 74,
                        "name": "Side",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "995:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Side_$12_$",
                          "typeString": "type(enum Dex.Side)"
                        }
                      },
                      "id": 75,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "BUY",
                      "nodeType": "MemberAccess",
                      "src": "995:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Side_$12",
                        "typeString": "enum Dex.Side"
                      }
                    },
                    "src": "987:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_Side_$12",
                        "typeString": "enum Dex.Side"
                      },
                      "id": 96,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 93,
                        "name": "side",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59,
                        "src": "1189:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Side_$12",
                          "typeString": "enum Dex.Side"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 94,
                          "name": "Side",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12,
                          "src": "1197:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Side_$12_$",
                            "typeString": "type(enum Dex.Side)"
                          }
                        },
                        "id": 95,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "SELL",
                        "nodeType": "MemberAccess",
                        "src": "1197:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Side_$12",
                          "typeString": "enum Dex.Side"
                        }
                      },
                      "src": "1189:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 110,
                    "nodeType": "IfStatement",
                    "src": "1185:199:0",
                    "trueBody": {
                      "id": 109,
                      "nodeType": "Block",
                      "src": "1208:176:0",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 105,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 98,
                                      "name": "balances",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 328,
                                      "src": "1249:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
                                        "typeString": "mapping(address => mapping(bytes32 => uint256))"
                                      }
                                    },
                                    "id": 101,
                                    "indexExpression": {
                                      "expression": {
                                        "id": 99,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967281,
                                        "src": "1258:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 100,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "1258:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "1249:20:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                                      "typeString": "mapping(bytes32 => uint256)"
                                    }
                                  },
                                  "id": 103,
                                  "indexExpression": {
                                    "id": 102,
                                    "name": "ticker",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 57,
                                    "src": "1270:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1249:28:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "id": 104,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 61,
                                  "src": "1281:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1249:38:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "416d6f756e74206d757374206265206c657373207468616e206f7220657175616c20746f2062616c616e636520736f6c64",
                                "id": 106,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1306:51:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_76da05e533ce8c94bd709e9147d4cfa7f84cac1a15886f38246d6deb5177fe61",
                                  "typeString": "literal_string \"Amount must be less than or equal to balance sold\""
                                },
                                "value": "Amount must be less than or equal to balance sold"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_76da05e533ce8c94bd709e9147d4cfa7f84cac1a15886f38246d6deb5177fe61",
                                  "typeString": "literal_string \"Amount must be less than or equal to balance sold\""
                                }
                              ],
                              "id": 97,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "src": "1223:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 107,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1223:149:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 108,
                          "nodeType": "ExpressionStatement",
                          "src": "1223:149:0"
                        }
                      ]
                    }
                  },
                  "id": 111,
                  "nodeType": "IfStatement",
                  "src": "983:401:0",
                  "trueBody": {
                    "id": 92,
                    "nodeType": "Block",
                    "src": "1005:174:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 88,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 78,
                                    "name": "balances",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 328,
                                    "src": "1046:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
                                      "typeString": "mapping(address => mapping(bytes32 => uint256))"
                                    }
                                  },
                                  "id": 81,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 79,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "1055:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 80,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "1055:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1046:20:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                                    "typeString": "mapping(bytes32 => uint256)"
                                  }
                                },
                                "id": 83,
                                "indexExpression": {
                                  "hexValue": "455448",
                                  "id": 82,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1067:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_aaaebeba3810b1e6b70781f14b2d72c1cb89c0b2b320c43bb67ff79f562f5ff4",
                                    "typeString": "literal_string \"ETH\""
                                  },
                                  "value": "ETH"
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1046:27:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "id": 86,
                                    "name": "price",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 63,
                                    "src": "1088:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 84,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 61,
                                    "src": "1077:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 85,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mul",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 745,
                                  "src": "1077:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 87,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1077:17:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1046:48:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e73756666696369656e742066756e647320746f20706c61636520627579206f72646572",
                              "id": 89,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1113:39:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b2e4c56c41e5356ec7e207a60af06952b71d2bb0dd8ce40ea66388e53e4e8652",
                                "typeString": "literal_string \"Insufficient funds to place buy order\""
                              },
                              "value": "Insufficient funds to place buy order"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b2e4c56c41e5356ec7e207a60af06952b71d2bb0dd8ce40ea66388e53e4e8652",
                                "typeString": "literal_string \"Insufficient funds to place buy order\""
                              }
                            ],
                            "id": 77,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "1020:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 90,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1020:147:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 91,
                        "nodeType": "ExpressionStatement",
                        "src": "1020:147:0"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    115
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 115,
                      "mutability": "mutable",
                      "name": "orders",
                      "nodeType": "VariableDeclaration",
                      "scope": 153,
                      "src": "1396:22:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Order_$25_storage_$dyn_storage_ptr",
                        "typeString": "struct Dex.Order[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 113,
                          "name": "Order",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 25,
                          "src": "1396:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Order_$25_storage_ptr",
                            "typeString": "struct Dex.Order"
                          }
                        },
                        "id": 114,
                        "nodeType": "ArrayTypeName",
                        "src": "1396:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Order_$25_storage_$dyn_storage_ptr",
                          "typeString": "struct Dex.Order[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 124,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 116,
                        "name": "orderBook",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35,
                        "src": "1421:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_array$_t_struct$_Order_$25_storage_$dyn_storage_$_$",
                          "typeString": "mapping(bytes32 => mapping(uint256 => struct Dex.Order storage ref[] storage ref))"
                        }
                      },
                      "id": 118,
                      "indexExpression": {
                        "id": 117,
                        "name": "ticker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57,
                        "src": "1431:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1421:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_Order_$25_storage_$dyn_storage_$",
                        "typeString": "mapping(uint256 => struct Dex.Order storage ref[] storage ref)"
                      }
                    },
                    "id": 123,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 121,
                          "name": "side",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59,
                          "src": "1447:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Side_$12",
                            "typeString": "enum Dex.Side"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_enum$_Side_$12",
                            "typeString": "enum Dex.Side"
                          }
                        ],
                        "id": 120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1439:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 119,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1439:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 122,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1439:13:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1421:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Order_$25_storage_$dyn_storage",
                      "typeString": "struct Dex.Order storage ref[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1396:57:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 129,
                            "name": "nextOrderId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28,
                            "src": "1496:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 130,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1509:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 131,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1509:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "id": 132,
                            "name": "side",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59,
                            "src": "1521:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Side_$12",
                              "typeString": "enum Dex.Side"
                            }
                          },
                          {
                            "id": 133,
                            "name": "ticker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 57,
                            "src": "1527:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 134,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61,
                            "src": "1535:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 135,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63,
                            "src": "1543:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_enum$_Side_$12",
                              "typeString": "enum Dex.Side"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 128,
                          "name": "Order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25,
                          "src": "1490:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Order_$25_storage_ptr_$",
                            "typeString": "type(struct Dex.Order storage pointer)"
                          }
                        },
                        "id": 136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1490:59:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Order_$25_memory_ptr",
                          "typeString": "struct Dex.Order memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Order_$25_memory_ptr",
                          "typeString": "struct Dex.Order memory"
                        }
                      ],
                      "expression": {
                        "id": 125,
                        "name": "orders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 115,
                        "src": "1464:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Order_$25_storage_$dyn_storage_ptr",
                          "typeString": "struct Dex.Order storage ref[] storage pointer"
                        }
                      },
                      "id": 127,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1464:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Order_$25_storage_$returns$__$",
                        "typeString": "function (struct Dex.Order storage ref)"
                      }
                    },
                    "id": 137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1464:96:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 138,
                  "nodeType": "ExpressionStatement",
                  "src": "1464:96:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 139,
                        "name": "orders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 115,
                        "src": "1601:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Order_$25_storage_$dyn_storage_ptr",
                          "typeString": "struct Dex.Order storage ref[] storage pointer"
                        }
                      },
                      "id": 140,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1601:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 141,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1617:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1601:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 149,
                  "nodeType": "IfStatement",
                  "src": "1597:77:0",
                  "trueBody": {
                    "id": 148,
                    "nodeType": "Block",
                    "src": "1620:54:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 144,
                              "name": "orders",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 115,
                              "src": "1649:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Order_$25_storage_$dyn_storage_ptr",
                                "typeString": "struct Dex.Order storage ref[] storage pointer"
                              }
                            },
                            {
                              "id": 145,
                              "name": "side",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 59,
                              "src": "1657:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Side_$12",
                                "typeString": "enum Dex.Side"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_array$_t_struct$_Order_$25_storage_$dyn_storage_ptr",
                                "typeString": "struct Dex.Order storage ref[] storage pointer"
                              },
                              {
                                "typeIdentifier": "t_enum$_Side_$12",
                                "typeString": "enum Dex.Side"
                              }
                            ],
                            "id": 143,
                            "name": "sortOrderBook",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 279,
                            "src": "1635:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_Order_$25_storage_$dyn_storage_ptr_$_t_enum$_Side_$12_$returns$__$",
                              "typeString": "function (struct Dex.Order storage ref[] storage pointer,enum Dex.Side)"
                            }
                          },
                          "id": 146,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1635:27:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 147,
                        "nodeType": "ExpressionStatement",
                        "src": "1635:27:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1686:13:0",
                    "subExpression": {
                      "id": 150,
                      "name": "nextOrderId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28,
                      "src": "1686:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 152,
                  "nodeType": "ExpressionStatement",
                  "src": "1686:13:0"
                }
              ]
            },
            "functionSelector": "ed25c4d3",
            "id": 154,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createLimitOrder",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 64,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57,
                  "mutability": "mutable",
                  "name": "ticker",
                  "nodeType": "VariableDeclaration",
                  "scope": 154,
                  "src": "746:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 56,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "746:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59,
                  "mutability": "mutable",
                  "name": "side",
                  "nodeType": "VariableDeclaration",
                  "scope": 154,
                  "src": "771:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Side_$12",
                    "typeString": "enum Dex.Side"
                  },
                  "typeName": {
                    "id": 58,
                    "name": "Side",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 12,
                    "src": "771:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Side_$12",
                      "typeString": "enum Dex.Side"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 154,
                  "src": "791:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 60,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "791:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63,
                  "mutability": "mutable",
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 154,
                  "src": "816:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "816:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "735:101:0"
            },
            "returnParameters": {
              "id": 65,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "844:0:0"
            },
            "scope": 280,
            "src": "710:997:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 278,
              "nodeType": "Block",
              "src": "1781:697:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_Side_$12",
                      "typeString": "enum Dex.Side"
                    },
                    "id": 165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 162,
                      "name": "side",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 159,
                      "src": "1796:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Side_$12",
                        "typeString": "enum Dex.Side"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 163,
                        "name": "Side",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "1804:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Side_$12_$",
                          "typeString": "type(enum Dex.Side)"
                        }
                      },
                      "id": 164,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "BUY",
                      "nodeType": "MemberAccess",
                      "src": "1804:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Side_$12",
                        "typeString": "enum Dex.Side"
                      }
                    },
                    "src": "1796:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_Side_$12",
                        "typeString": "enum Dex.Side"
                      },
                      "id": 222,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 219,
                        "name": "side",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 159,
                        "src": "2138:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Side_$12",
                          "typeString": "enum Dex.Side"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 220,
                          "name": "Side",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12,
                          "src": "2146:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Side_$12_$",
                            "typeString": "type(enum Dex.Side)"
                          }
                        },
                        "id": 221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "SELL",
                        "nodeType": "MemberAccess",
                        "src": "2146:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Side_$12",
                          "typeString": "enum Dex.Side"
                        }
                      },
                      "src": "2138:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 276,
                    "nodeType": "IfStatement",
                    "src": "2134:337:0",
                    "trueBody": {
                      "id": 275,
                      "nodeType": "Block",
                      "src": "2157:314:0",
                      "statements": [
                        {
                          "body": {
                            "id": 273,
                            "nodeType": "Block",
                            "src": "2220:240:0",
                            "statements": [
                              {
                                "condition": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 246,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 236,
                                        "name": "orders",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 157,
                                        "src": "2243:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_Order_$25_storage_$dyn_storage_ptr",
                                          "typeString": "struct Dex.Order storage ref[] storage pointer"
                                        }
                                      },
                                      "id": 238,
                                      "indexExpression": {
                                        "id": 237,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 224,
                                        "src": "2250:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "2243:9:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Order_$25_storage",
                                        "typeString": "struct Dex.Order storage ref"
                                      }
                                    },
                                    "id": 239,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "price",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 24,
                                    "src": "2243:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "<",
                                  "rightExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 240,
                                        "name": "orders",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 157,
                                        "src": "2261:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_Order_$25_storage_$dyn_storage_ptr",
                                          "typeString": "struct Dex.Order storage ref[] storage pointer"
                                        }
                                      },
                                      "id": 244,
                                      "indexExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 243,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 241,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 224,
                                          "src": "2268:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "hexValue": "31",
                                          "id": 242,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "2272:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1_by_1",
                                            "typeString": "int_const 1"
                                          },
                                          "value": "1"
                                        },
                                        "src": "2268:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "2261:13:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Order_$25_storage",
                                        "typeString": "struct Dex.Order storage ref"
                                      }
                                    },
                                    "id": 245,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "price",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 24,
                                    "src": "2261:19:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "2243:37:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "id": 272,
                                "nodeType": "IfStatement",
                                "src": "2239:206:0",
                                "trueBody": {
                                  "id": 271,
                                  "nodeType": "Block",
                                  "src": "2282:163:0",
                                  "statements": [
                                    {
                                      "assignments": [
                                        248
                                      ],
                                      "declarations": [
                                        {
                                          "constant": false,
                                          "id": 248,
                                          "mutability": "mutable",
                                          "name": "temp",
                                          "nodeType": "VariableDeclaration",
                                          "scope": 271,
                                          "src": "2305:17:0",
                                          "stateVariable": false,
                                          "storageLocation": "memory",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Order_$25_memory_ptr",
                                            "typeString": "struct Dex.Order"
                                          },
                                          "typeName": {
                                            "id": 247,
                                            "name": "Order",
                                            "nodeType": "UserDefinedTypeName",
                                            "referencedDeclaration": 25,
                                            "src": "2305:5:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Order_$25_storage_ptr",
                                              "typeString": "struct Dex.Order"
                                            }
                                          },
                                          "visibility": "internal"
                                        }
                                      ],
                                      "id": 254,
                                      "initialValue": {
                                        "baseExpression": {
                                          "id": 249,
                                          "name": "orders",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 157,
                                          "src": "2325:6:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_Order_$25_storage_$dyn_storage_ptr",
                                            "typeString": "struct Dex.Order storage ref[] storage pointer"
                                          }
                                        },
                                        "id": 253,
                                        "indexExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 252,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 250,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 224,
                                            "src": "2332:1:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "-",
                                          "rightExpression": {
                                            "hexValue": "31",
                                            "id": 251,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "2336:1:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_1_by_1",
                                              "typeString": "int_const 1"
                                            },
                                            "value": "1"
                                          },
                                          "src": "2332:5:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "2325:13:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Order_$25_storage",
                                          "typeString": "struct Dex.Order storage ref"
                                        }
                                      },
                                      "nodeType": "VariableDeclarationStatement",
                                      "src": "2305:33:0"
                                    },
                                    {
                                      "expression": {
                                        "id": 263,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                          "baseExpression": {
                                            "id": 255,
                                            "name": "orders",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 157,
                                            "src": "2361:6:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_Order_$25_storage_$dyn_storage_ptr",
                                              "typeString": "struct Dex.Order storage ref[] storage pointer"
                                            }
                                          },
                                          "id": 259,
                                          "indexExpression": {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 258,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 256,
                                              "name": "i",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 224,
                                              "src": "2368:1:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "-",
                                            "rightExpression": {
                                              "hexValue": "31",
                                              "id": 257,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "2372:1:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_1_by_1",
                                                "typeString": "int_const 1"
                                              },
                                              "value": "1"
                                            },
                                            "src": "2368:5:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": true,
                                          "nodeType": "IndexAccess",
                                          "src": "2361:13:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Order_$25_storage",
                                            "typeString": "struct Dex.Order storage ref"
                                          }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                          "baseExpression": {
                                            "id": 260,
                                            "name": "orders",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 157,
                                            "src": "2377:6:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_Order_$25_storage_$dyn_storage_ptr",
                                              "typeString": "struct Dex.Order storage ref[] storage pointer"
                                            }
                                          },
                                          "id": 262,
                                          "indexExpression": {
                                            "id": 261,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 224,
                                            "src": "2384:1:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "2377:9:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Order_$25_storage",
                                            "typeString": "struct Dex.Order storage ref"
                                          }
                                        },
                                        "src": "2361:25:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Order_$25_storage",
                                          "typeString": "struct Dex.Order storage ref"
                                        }
                                      },
                                      "id": 264,
                                      "nodeType": "ExpressionStatement",
                                      "src": "2361:25:0"
                                    },
                                    {
                                      "expression": {
                                        "id": 269,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                          "baseExpression": {
                                            "id": 265,
                                            "name": "orders",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 157,
                                            "src": "2409:6:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_Order_$25_storage_$dyn_storage_ptr",
                                              "typeString": "struct Dex.Order storage ref[] storage pointer"
                                            }
                                          },
                                          "id": 267,
                                          "indexExpression": {
                                            "id": 266,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 224,
                                            "src": "2416:1:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": true,
                                          "nodeType": "IndexAccess",
                                          "src": "2409:9:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Order_$25_storage",
                                            "typeString": "struct Dex.Order storage ref"
                                          }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                          "id": 268,
                                          "name": "temp",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 248,
                                          "src": "2421:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Order_$25_memory_ptr",
                                            "typeString": "struct Dex.Order memory"
                                          }
                                        },
                                        "src": "2409:16:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Order_$25_storage",
                                          "typeString": "struct Dex.Order storage ref"
                                        }
                                      },
                                      "id": 270,
                                      "nodeType": "ExpressionStatement",
                                      "src": "2409:16:0"
                                    }
                                  ]
                                }
                              }
                            ]
                          },
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 232,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 230,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 224,
                              "src": "2208:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 231,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2212:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "2208:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 274,
                          "initializationExpression": {
                            "assignments": [
                              224
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 224,
                                "mutability": "mutable",
                                "name": "i",
                                "nodeType": "VariableDeclaration",
                                "scope": 274,
                                "src": "2177:9:0",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 223,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2177:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 229,
                            "initialValue": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 228,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 225,
                                  "name": "orders",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 157,
                                  "src": "2189:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Order_$25_storage_$dyn_storage_ptr",
                                    "typeString": "struct Dex.Order storage ref[] storage pointer"
                                  }
                                },
                                "id": 226,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "2189:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 227,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2205:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "2189:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "2177:29:0"
                          },
                          "loopExpression": {
                            "expression": {
                              "id": 234,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "--",
                              "prefix": false,
                              "src": "2215:3:0",
                              "subExpression": {
                                "id": 233,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 224,
                                "src": "2215:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 235,
                            "nodeType": "ExpressionStatement",
                            "src": "2215:3:0"
                          },
                          "nodeType": "ForStatement",
                          "src": "2172:288:0"
                        }
                      ]
                    }
                  },
                  "id": 277,
                  "nodeType": "IfStatement",
                  "src": "1792:679:0",
                  "trueBody": {
                    "id": 218,
                    "nodeType": "Block",
                    "src": "1814:314:0",
                    "statements": [
                      {
                        "body": {
                          "id": 216,
                          "nodeType": "Block",
                          "src": "1877:240:0",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 189,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 179,
                                      "name": "orders",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 157,
                                      "src": "1900:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Order_$25_storage_$dyn_storage_ptr",
                                        "typeString": "struct Dex.Order storage ref[] storage pointer"
                                      }
                                    },
                                    "id": 181,
                                    "indexExpression": {
                                      "id": 180,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 167,
                                      "src": "1907:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "1900:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Order_$25_storage",
                                      "typeString": "struct Dex.Order storage ref"
                                    }
                                  },
                                  "id": 182,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "price",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 24,
                                  "src": "1900:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 183,
                                      "name": "orders",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 157,
                                      "src": "1918:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Order_$25_storage_$dyn_storage_ptr",
                                        "typeString": "struct Dex.Order storage ref[] storage pointer"
                                      }
                                    },
                                    "id": 187,
                                    "indexExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 186,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 184,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 167,
                                        "src": "1925:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "hexValue": "31",
                                        "id": 185,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1929:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        },
                                        "value": "1"
                                      },
                                      "src": "1925:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "1918:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Order_$25_storage",
                                      "typeString": "struct Dex.Order storage ref"
                                    }
                                  },
                                  "id": 188,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "price",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 24,
                                  "src": "1918:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1900:37:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 215,
                              "nodeType": "IfStatement",
                              "src": "1896:206:0",
                              "trueBody": {
                                "id": 214,
                                "nodeType": "Block",
                                "src": "1939:163:0",
                                "statements": [
                                  {
                                    "assignments": [
                                      191
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 191,
                                        "mutability": "mutable",
                                        "name": "temp",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 214,
                                        "src": "1962:17:0",
                                        "stateVariable": false,
                                        "storageLocation": "memory",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Order_$25_memory_ptr",
                                          "typeString": "struct Dex.Order"
                                        },
                                        "typeName": {
                                          "id": 190,
                                          "name": "Order",
                                          "nodeType": "UserDefinedTypeName",
                                          "referencedDeclaration": 25,
                                          "src": "1962:5:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Order_$25_storage_ptr",
                                            "typeString": "struct Dex.Order"
                                          }
                                        },
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 197,
                                    "initialValue": {
                                      "baseExpression": {
                                        "id": 192,
                                        "name": "orders",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 157,
                                        "src": "1982:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_Order_$25_storage_$dyn_storage_ptr",
                                          "typeString": "struct Dex.Order storage ref[] storage pointer"
                                        }
                                      },
                                      "id": 196,
                                      "indexExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 195,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 193,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 167,
                                          "src": "1989:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "hexValue": "31",
                                          "id": 194,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "1993:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1_by_1",
                                            "typeString": "int_const 1"
                                          },
                                          "value": "1"
                                        },
                                        "src": "1989:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "1982:13:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Order_$25_storage",
                                        "typeString": "struct Dex.Order storage ref"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "1962:33:0"
                                  },
                                  {
                                    "expression": {
                                      "id": 206,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "baseExpression": {
                                          "id": 198,
                                          "name": "orders",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 157,
                                          "src": "2018:6:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_Order_$25_storage_$dyn_storage_ptr",
                                            "typeString": "struct Dex.Order storage ref[] storage pointer"
                                          }
                                        },
                                        "id": 202,
                                        "indexExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 201,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 199,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 167,
                                            "src": "2025:1:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "-",
                                          "rightExpression": {
                                            "hexValue": "31",
                                            "id": 200,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "2029:1:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_1_by_1",
                                              "typeString": "int_const 1"
                                            },
                                            "value": "1"
                                          },
                                          "src": "2025:5:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "2018:13:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Order_$25_storage",
                                          "typeString": "struct Dex.Order storage ref"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "baseExpression": {
                                          "id": 203,
                                          "name": "orders",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 157,
                                          "src": "2034:6:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_Order_$25_storage_$dyn_storage_ptr",
                                            "typeString": "struct Dex.Order storage ref[] storage pointer"
                                          }
                                        },
                                        "id": 205,
                                        "indexExpression": {
                                          "id": 204,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 167,
                                          "src": "2041:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "2034:9:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Order_$25_storage",
                                          "typeString": "struct Dex.Order storage ref"
                                        }
                                      },
                                      "src": "2018:25:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Order_$25_storage",
                                        "typeString": "struct Dex.Order storage ref"
                                      }
                                    },
                                    "id": 207,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2018:25:0"
                                  },
                                  {
                                    "expression": {
                                      "id": 212,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "baseExpression": {
                                          "id": 208,
                                          "name": "orders",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 157,
                                          "src": "2066:6:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_Order_$25_storage_$dyn_storage_ptr",
                                            "typeString": "struct Dex.Order storage ref[] storage pointer"
                                          }
                                        },
                                        "id": 210,
                                        "indexExpression": {
                                          "id": 209,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 167,
                                          "src": "2073:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "2066:9:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Order_$25_storage",
                                          "typeString": "struct Dex.Order storage ref"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "id": 211,
                                        "name": "temp",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 191,
                                        "src": "2078:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Order_$25_memory_ptr",
                                          "typeString": "struct Dex.Order memory"
                                        }
                                      },
                                      "src": "2066:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Order_$25_storage",
                                        "typeString": "struct Dex.Order storage ref"
                                      }
                                    },
                                    "id": 213,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2066:16:0"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 175,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 173,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 167,
                            "src": "1865:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 174,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1869:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1865:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 217,
                        "initializationExpression": {
                          "assignments": [
                            167
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 167,
                              "mutability": "mutable",
                              "name": "i",
                              "nodeType": "VariableDeclaration",
                              "scope": 217,
                              "src": "1834:9:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 166,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1834:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 172,
                          "initialValue": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 171,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 168,
                                "name": "orders",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 157,
                                "src": "1846:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Order_$25_storage_$dyn_storage_ptr",
                                  "typeString": "struct Dex.Order storage ref[] storage pointer"
                                }
                              },
                              "id": 169,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "1846:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 170,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1862:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "1846:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "1834:29:0"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 177,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "--",
                            "prefix": false,
                            "src": "1872:3:0",
                            "subExpression": {
                              "id": 176,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 167,
                              "src": "1872:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 178,
                          "nodeType": "ExpressionStatement",
                          "src": "1872:3:0"
                        },
                        "nodeType": "ForStatement",
                        "src": "1829:288:0"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 279,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sortOrderBook",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 160,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 157,
                  "mutability": "mutable",
                  "name": "orders",
                  "nodeType": "VariableDeclaration",
                  "scope": 279,
                  "src": "1738:22:0",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Order_$25_storage_$dyn_storage_ptr",
                    "typeString": "struct Dex.Order[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 155,
                      "name": "Order",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 25,
                      "src": "1738:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Order_$25_storage_ptr",
                        "typeString": "struct Dex.Order"
                      }
                    },
                    "id": 156,
                    "nodeType": "ArrayTypeName",
                    "src": "1738:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Order_$25_storage_$dyn_storage_ptr",
                      "typeString": "struct Dex.Order[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 159,
                  "mutability": "mutable",
                  "name": "side",
                  "nodeType": "VariableDeclaration",
                  "scope": 279,
                  "src": "1762:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Side_$12",
                    "typeString": "enum Dex.Side"
                  },
                  "typeName": {
                    "id": 158,
                    "name": "Side",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 12,
                    "src": "1762:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Side_$12",
                      "typeString": "enum Dex.Side"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1737:35:0"
            },
            "returnParameters": {
              "id": 161,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1781:0:0"
            },
            "scope": 280,
            "src": "1715:763:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 281,
        "src": "151:2330:0"
      }
    ],
    "src": "0:2483:0"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/D/Ivan On Tech Academy/Ethereum Programming 201/2021/DEX/contracts/Dex.sol",
      "exportedSymbols": {
        "Context": [
          527
        ],
        "Dex": [
          280
        ],
        "IERC20": [
          1413
        ],
        "Ownable": [
          636
        ],
        "SafeMath": [
          832
        ],
        "Wallet": [
          504
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.6",
            ".0",
            "<",
            "0.8",
            ".0"
          ]
        },
        "id": 1,
        "name": "PragmaDirective",
        "src": "0:31:0"
      },
      {
        "attributes": {
          "literals": [
            "abicoder",
            "v2"
          ]
        },
        "id": 2,
        "name": "PragmaDirective",
        "src": "33:19:0"
      },
      {
        "attributes": {
          "SourceUnit": 505,
          "absolutePath": "/D/Ivan On Tech Academy/Ethereum Programming 201/2021/DEX/contracts/Wallet.sol",
          "file": "./Wallet.sol",
          "scope": 281,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 3,
        "name": "ImportDirective",
        "src": "56:22:0"
      },
      {
        "attributes": {
          "SourceUnit": 833,
          "absolutePath": "/D/Ivan On Tech Academy/Ethereum Programming 201/2021/DEX/node_modules/@openzeppelin/contracts/math/SafeMath.sol",
          "file": "../node_modules/@openzeppelin/contracts/math/SafeMath.sol",
          "scope": 281,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 4,
        "name": "ImportDirective",
        "src": "80:67:0"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            504,
            527,
            636
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            280,
            504,
            636,
            527
          ],
          "name": "Dex",
          "scope": 281
        },
        "children": [
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "Wallet",
                  "referencedDeclaration": 504,
                  "type": "contract Wallet"
                },
                "id": 5,
                "name": "UserDefinedTypeName",
                "src": "167:6:0"
              }
            ],
            "id": 6,
            "name": "InheritanceSpecifier",
            "src": "167:6:0"
          },
          {
            "children": [
              {
                "attributes": {
                  "name": "SafeMath",
                  "referencedDeclaration": 832,
                  "type": "library SafeMath"
                },
                "id": 7,
                "name": "UserDefinedTypeName",
                "src": "187:8:0"
              },
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 8,
                "name": "ElementaryTypeName",
                "src": "200:7:0"
              }
            ],
            "id": 9,
            "name": "UsingForDirective",
            "src": "181:27:0"
          },
          {
            "attributes": {
              "canonicalName": "Dex.Side",
              "name": "Side"
            },
            "children": [
              {
                "attributes": {
                  "name": "BUY"
                },
                "id": 10,
                "name": "EnumValue",
                "src": "227:3:0"
              },
              {
                "attributes": {
                  "name": "SELL"
                },
                "id": 11,
                "name": "EnumValue",
                "src": "232:4:0"
              }
            ],
            "id": 12,
            "name": "EnumDefinition",
            "src": "216:21:0"
          },
          {
            "attributes": {
              "canonicalName": "Dex.Order",
              "name": "Order",
              "scope": 280,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "id",
                  "scope": 25,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 13,
                    "name": "ElementaryTypeName",
                    "src": "269:7:0"
                  }
                ],
                "id": 14,
                "name": "VariableDeclaration",
                "src": "269:10:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "trader",
                  "scope": 25,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "address",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "stateMutability": "nonpayable",
                      "type": "address"
                    },
                    "id": 15,
                    "name": "ElementaryTypeName",
                    "src": "290:7:0"
                  }
                ],
                "id": 16,
                "name": "VariableDeclaration",
                "src": "290:14:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "side",
                  "scope": 25,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "enum Dex.Side",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "Side",
                      "referencedDeclaration": 12,
                      "type": "enum Dex.Side"
                    },
                    "id": 17,
                    "name": "UserDefinedTypeName",
                    "src": "315:4:0"
                  }
                ],
                "id": 18,
                "name": "VariableDeclaration",
                "src": "315:9:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "ticker",
                  "scope": 25,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "bytes32",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bytes32",
                      "type": "bytes32"
                    },
                    "id": 19,
                    "name": "ElementaryTypeName",
                    "src": "335:7:0"
                  }
                ],
                "id": 20,
                "name": "VariableDeclaration",
                "src": "335:14:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "scope": 25,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 21,
                    "name": "ElementaryTypeName",
                    "src": "360:7:0"
                  }
                ],
                "id": 22,
                "name": "VariableDeclaration",
                "src": "360:14:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "price",
                  "scope": 25,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 23,
                    "name": "ElementaryTypeName",
                    "src": "385:7:0"
                  }
                ],
                "id": 24,
                "name": "VariableDeclaration",
                "src": "385:13:0"
              }
            ],
            "id": 25,
            "name": "StructDefinition",
            "src": "245:161:0"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "2a58b330",
              "mutability": "mutable",
              "name": "nextOrderId",
              "scope": 280,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 26,
                "name": "ElementaryTypeName",
                "src": "414:7:0"
              },
              {
                "attributes": {
                  "hexvalue": "30",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "token": "number",
                  "type": "int_const 0",
                  "value": "0"
                },
                "id": 27,
                "name": "Literal",
                "src": "443:1:0"
              }
            ],
            "id": 28,
            "name": "VariableDeclaration",
            "src": "414:30:0"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "0bb431b6",
              "mutability": "mutable",
              "name": "orderBook",
              "scope": 280,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(bytes32 => mapping(uint256 => struct Dex.Order[]))",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(bytes32 => mapping(uint256 => struct Dex.Order[]))"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bytes32",
                      "type": "bytes32"
                    },
                    "id": 29,
                    "name": "ElementaryTypeName",
                    "src": "461:7:0"
                  },
                  {
                    "attributes": {
                      "type": "mapping(uint256 => struct Dex.Order[])"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 30,
                        "name": "ElementaryTypeName",
                        "src": "480:7:0"
                      },
                      {
                        "attributes": {
                          "type": "struct Dex.Order[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "Order",
                              "referencedDeclaration": 25,
                              "type": "struct Dex.Order"
                            },
                            "id": 31,
                            "name": "UserDefinedTypeName",
                            "src": "491:5:0"
                          }
                        ],
                        "id": 32,
                        "name": "ArrayTypeName",
                        "src": "491:7:0"
                      }
                    ],
                    "id": 33,
                    "name": "Mapping",
                    "src": "472:27:0"
                  }
                ],
                "id": 34,
                "name": "Mapping",
                "src": "453:47:0"
              }
            ],
            "id": 35,
            "name": "VariableDeclaration",
            "src": "453:64:0"
          },
          {
            "attributes": {
              "functionSelector": "ba58ea68",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getOrderBook",
              "scope": 280,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "ticker",
                      "scope": 55,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 36,
                        "name": "ElementaryTypeName",
                        "src": "548:7:0"
                      }
                    ],
                    "id": 37,
                    "name": "VariableDeclaration",
                    "src": "548:14:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "side",
                      "scope": 55,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "enum Dex.Side",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "Side",
                          "referencedDeclaration": 12,
                          "type": "enum Dex.Side"
                        },
                        "id": 38,
                        "name": "UserDefinedTypeName",
                        "src": "564:4:0"
                      }
                    ],
                    "id": 39,
                    "name": "VariableDeclaration",
                    "src": "564:9:0"
                  }
                ],
                "id": 40,
                "name": "ParameterList",
                "src": "547:27:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 55,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "struct Dex.Order[]",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "struct Dex.Order[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "Order",
                              "referencedDeclaration": 25,
                              "type": "struct Dex.Order"
                            },
                            "id": 41,
                            "name": "UserDefinedTypeName",
                            "src": "623:5:0"
                          }
                        ],
                        "id": 42,
                        "name": "ArrayTypeName",
                        "src": "623:7:0"
                      }
                    ],
                    "id": 43,
                    "name": "VariableDeclaration",
                    "src": "623:14:0"
                  }
                ],
                "id": 44,
                "name": "ParameterList",
                "src": "622:16:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 44
                    },
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct Dex.Order storage ref[] storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "type": "mapping(uint256 => struct Dex.Order storage ref[] storage ref)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 35,
                                  "type": "mapping(bytes32 => mapping(uint256 => struct Dex.Order storage ref[] storage ref))",
                                  "value": "orderBook"
                                },
                                "id": 45,
                                "name": "Identifier",
                                "src": "662:9:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 37,
                                  "type": "bytes32",
                                  "value": "ticker"
                                },
                                "id": 46,
                                "name": "Identifier",
                                "src": "672:6:0"
                              }
                            ],
                            "id": 47,
                            "name": "IndexAccess",
                            "src": "662:17:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "uint256",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_enum$_Side_$12",
                                      "typeString": "enum Dex.Side"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "uint256"
                                    },
                                    "id": 48,
                                    "name": "ElementaryTypeName",
                                    "src": "680:7:0"
                                  }
                                ],
                                "id": 49,
                                "name": "ElementaryTypeNameExpression",
                                "src": "680:7:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 39,
                                  "type": "enum Dex.Side",
                                  "value": "side"
                                },
                                "id": 50,
                                "name": "Identifier",
                                "src": "688:4:0"
                              }
                            ],
                            "id": 51,
                            "name": "FunctionCall",
                            "src": "680:13:0"
                          }
                        ],
                        "id": 52,
                        "name": "IndexAccess",
                        "src": "662:32:0"
                      }
                    ],
                    "id": 53,
                    "name": "Return",
                    "src": "655:39:0"
                  }
                ],
                "id": 54,
                "name": "Block",
                "src": "644:58:0"
              }
            ],
            "id": 55,
            "name": "FunctionDefinition",
            "src": "526:176:0"
          },
          {
            "attributes": {
              "functionSelector": "ed25c4d3",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "createLimitOrder",
              "scope": 280,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "ticker",
                      "scope": 154,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 56,
                        "name": "ElementaryTypeName",
                        "src": "746:7:0"
                      }
                    ],
                    "id": 57,
                    "name": "VariableDeclaration",
                    "src": "746:14:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "side",
                      "scope": 154,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "enum Dex.Side",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "Side",
                          "referencedDeclaration": 12,
                          "type": "enum Dex.Side"
                        },
                        "id": 58,
                        "name": "UserDefinedTypeName",
                        "src": "771:4:0"
                      }
                    ],
                    "id": 59,
                    "name": "VariableDeclaration",
                    "src": "771:9:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "amount",
                      "scope": 154,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 60,
                        "name": "ElementaryTypeName",
                        "src": "791:7:0"
                      }
                    ],
                    "id": 61,
                    "name": "VariableDeclaration",
                    "src": "791:14:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "price",
                      "scope": 154,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 62,
                        "name": "ElementaryTypeName",
                        "src": "816:7:0"
                      }
                    ],
                    "id": 63,
                    "name": "VariableDeclaration",
                    "src": "816:13:0"
                  }
                ],
                "id": 64,
                "name": "ParameterList",
                "src": "735:101:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 65,
                "name": "ParameterList",
                "src": "844:0:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_be97154724c44ab4cd4d1f444e9ba13295d267756b33528c323b465c74416742",
                                  "typeString": "literal_string \"Must supply a non-zero amount you would like to buy/sell\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 66,
                            "name": "Identifier",
                            "src": "855:7:0"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": ">=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 61,
                                  "type": "uint256",
                                  "value": "amount"
                                },
                                "id": 67,
                                "name": "Identifier",
                                "src": "877:6:0"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 68,
                                "name": "Literal",
                                "src": "887:1:0"
                              }
                            ],
                            "id": 69,
                            "name": "BinaryOperation",
                            "src": "877:11:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "4d75737420737570706c792061206e6f6e2d7a65726f20616d6f756e7420796f7520776f756c64206c696b6520746f206275792f73656c6c",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Must supply a non-zero amount you would like to buy/sell\"",
                              "value": "Must supply a non-zero amount you would like to buy/sell"
                            },
                            "id": 70,
                            "name": "Literal",
                            "src": "903:58:0"
                          }
                        ],
                        "id": 71,
                        "name": "FunctionCall",
                        "src": "855:117:0"
                      }
                    ],
                    "id": 72,
                    "name": "ExpressionStatement",
                    "src": "855:117:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_Side_$12",
                            "typeString": "enum Dex.Side"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "==",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 59,
                              "type": "enum Dex.Side",
                              "value": "side"
                            },
                            "id": 73,
                            "name": "Identifier",
                            "src": "987:4:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "member_name": "BUY",
                              "type": "enum Dex.Side"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 12,
                                  "type": "type(enum Dex.Side)",
                                  "value": "Side"
                                },
                                "id": 74,
                                "name": "Identifier",
                                "src": "995:4:0"
                              }
                            ],
                            "id": 75,
                            "name": "MemberAccess",
                            "src": "995:8:0"
                          }
                        ],
                        "id": 76,
                        "name": "BinaryOperation",
                        "src": "987:16:0"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "tuple()",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        {
                                          "typeIdentifier": "t_stringliteral_b2e4c56c41e5356ec7e207a60af06952b71d2bb0dd8ce40ea66388e53e4e8652",
                                          "typeString": "literal_string \"Insufficient funds to place buy order\""
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        4294967278,
                                        4294967278
                                      ],
                                      "referencedDeclaration": 4294967278,
                                      "type": "function (bool,string memory) pure",
                                      "value": "require"
                                    },
                                    "id": 77,
                                    "name": "Identifier",
                                    "src": "1020:7:0"
                                  },
                                  {
                                    "attributes": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "operator": ">=",
                                      "type": "bool"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "uint256"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "type": "mapping(bytes32 => uint256)"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 328,
                                                  "type": "mapping(address => mapping(bytes32 => uint256))",
                                                  "value": "balances"
                                                },
                                                "id": 78,
                                                "name": "Identifier",
                                                "src": "1046:8:0"
                                              },
                                              {
                                                "attributes": {
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "member_name": "sender",
                                                  "type": "address payable"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 4294967281,
                                                      "type": "msg",
                                                      "value": "msg"
                                                    },
                                                    "id": 79,
                                                    "name": "Identifier",
                                                    "src": "1055:3:0"
                                                  }
                                                ],
                                                "id": 80,
                                                "name": "MemberAccess",
                                                "src": "1055:10:0"
                                              }
                                            ],
                                            "id": 81,
                                            "name": "IndexAccess",
                                            "src": "1046:20:0"
                                          },
                                          {
                                            "attributes": {
                                              "hexvalue": "455448",
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "token": "string",
                                              "type": "literal_string \"ETH\"",
                                              "value": "ETH"
                                            },
                                            "id": 82,
                                            "name": "Literal",
                                            "src": "1067:5:0"
                                          }
                                        ],
                                        "id": 83,
                                        "name": "IndexAccess",
                                        "src": "1046:27:0"
                                      },
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "isStructConstructorCall": false,
                                          "lValueRequested": false,
                                          "names": [
                                            null
                                          ],
                                          "tryCall": false,
                                          "type": "uint256",
                                          "type_conversion": false
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              ],
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "mul",
                                              "referencedDeclaration": 745,
                                              "type": "function (uint256,uint256) pure returns (uint256)"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 61,
                                                  "type": "uint256",
                                                  "value": "amount"
                                                },
                                                "id": 84,
                                                "name": "Identifier",
                                                "src": "1077:6:0"
                                              }
                                            ],
                                            "id": 85,
                                            "name": "MemberAccess",
                                            "src": "1077:10:0"
                                          },
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 63,
                                              "type": "uint256",
                                              "value": "price"
                                            },
                                            "id": 86,
                                            "name": "Identifier",
                                            "src": "1088:5:0"
                                          }
                                        ],
                                        "id": 87,
                                        "name": "FunctionCall",
                                        "src": "1077:17:0"
                                      }
                                    ],
                                    "id": 88,
                                    "name": "BinaryOperation",
                                    "src": "1046:48:0"
                                  },
                                  {
                                    "attributes": {
                                      "hexvalue": "496e73756666696369656e742066756e647320746f20706c61636520627579206f72646572",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "token": "string",
                                      "type": "literal_string \"Insufficient funds to place buy order\"",
                                      "value": "Insufficient funds to place buy order"
                                    },
                                    "id": 89,
                                    "name": "Literal",
                                    "src": "1113:39:0"
                                  }
                                ],
                                "id": 90,
                                "name": "FunctionCall",
                                "src": "1020:147:0"
                              }
                            ],
                            "id": 91,
                            "name": "ExpressionStatement",
                            "src": "1020:147:0"
                          }
                        ],
                        "id": 92,
                        "name": "Block",
                        "src": "1005:174:0"
                      },
                      {
                        "attributes": {},
                        "children": [
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_enum$_Side_$12",
                                "typeString": "enum Dex.Side"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 59,
                                  "type": "enum Dex.Side",
                                  "value": "side"
                                },
                                "id": 93,
                                "name": "Identifier",
                                "src": "1189:4:0"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "member_name": "SELL",
                                  "type": "enum Dex.Side"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 12,
                                      "type": "type(enum Dex.Side)",
                                      "value": "Side"
                                    },
                                    "id": 94,
                                    "name": "Identifier",
                                    "src": "1197:4:0"
                                  }
                                ],
                                "id": 95,
                                "name": "MemberAccess",
                                "src": "1197:9:0"
                              }
                            ],
                            "id": 96,
                            "name": "BinaryOperation",
                            "src": "1189:17:0"
                          },
                          {
                            "children": [
                              {
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "tryCall": false,
                                      "type": "tuple()",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            },
                                            {
                                              "typeIdentifier": "t_stringliteral_76da05e533ce8c94bd709e9147d4cfa7f84cac1a15886f38246d6deb5177fe61",
                                              "typeString": "literal_string \"Amount must be less than or equal to balance sold\""
                                            }
                                          ],
                                          "overloadedDeclarations": [
                                            4294967278,
                                            4294967278
                                          ],
                                          "referencedDeclaration": 4294967278,
                                          "type": "function (bool,string memory) pure",
                                          "value": "require"
                                        },
                                        "id": 97,
                                        "name": "Identifier",
                                        "src": "1223:7:0"
                                      },
                                      {
                                        "attributes": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": ">=",
                                          "type": "bool"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "type": "uint256"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "type": "mapping(bytes32 => uint256)"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 328,
                                                      "type": "mapping(address => mapping(bytes32 => uint256))",
                                                      "value": "balances"
                                                    },
                                                    "id": 98,
                                                    "name": "Identifier",
                                                    "src": "1249:8:0"
                                                  },
                                                  {
                                                    "attributes": {
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "member_name": "sender",
                                                      "type": "address payable"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 4294967281,
                                                          "type": "msg",
                                                          "value": "msg"
                                                        },
                                                        "id": 99,
                                                        "name": "Identifier",
                                                        "src": "1258:3:0"
                                                      }
                                                    ],
                                                    "id": 100,
                                                    "name": "MemberAccess",
                                                    "src": "1258:10:0"
                                                  }
                                                ],
                                                "id": 101,
                                                "name": "IndexAccess",
                                                "src": "1249:20:0"
                                              },
                                              {
                                                "attributes": {
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 57,
                                                  "type": "bytes32",
                                                  "value": "ticker"
                                                },
                                                "id": 102,
                                                "name": "Identifier",
                                                "src": "1270:6:0"
                                              }
                                            ],
                                            "id": 103,
                                            "name": "IndexAccess",
                                            "src": "1249:28:0"
                                          },
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 61,
                                              "type": "uint256",
                                              "value": "amount"
                                            },
                                            "id": 104,
                                            "name": "Identifier",
                                            "src": "1281:6:0"
                                          }
                                        ],
                                        "id": 105,
                                        "name": "BinaryOperation",
                                        "src": "1249:38:0"
                                      },
                                      {
                                        "attributes": {
                                          "hexvalue": "416d6f756e74206d757374206265206c657373207468616e206f7220657175616c20746f2062616c616e636520736f6c64",
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "token": "string",
                                          "type": "literal_string \"Amount must be less than or equal to balance sold\"",
                                          "value": "Amount must be less than or equal to balance sold"
                                        },
                                        "id": 106,
                                        "name": "Literal",
                                        "src": "1306:51:0"
                                      }
                                    ],
                                    "id": 107,
                                    "name": "FunctionCall",
                                    "src": "1223:149:0"
                                  }
                                ],
                                "id": 108,
                                "name": "ExpressionStatement",
                                "src": "1223:149:0"
                              }
                            ],
                            "id": 109,
                            "name": "Block",
                            "src": "1208:176:0"
                          }
                        ],
                        "id": 110,
                        "name": "IfStatement",
                        "src": "1185:199:0"
                      }
                    ],
                    "id": 111,
                    "name": "IfStatement",
                    "src": "983:401:0"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        115
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "orders",
                          "scope": 153,
                          "stateVariable": false,
                          "storageLocation": "storage",
                          "type": "struct Dex.Order[]",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "type": "struct Dex.Order[]"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "Order",
                                  "referencedDeclaration": 25,
                                  "type": "struct Dex.Order"
                                },
                                "id": 113,
                                "name": "UserDefinedTypeName",
                                "src": "1396:5:0"
                              }
                            ],
                            "id": 114,
                            "name": "ArrayTypeName",
                            "src": "1396:7:0"
                          }
                        ],
                        "id": 115,
                        "name": "VariableDeclaration",
                        "src": "1396:22:0"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct Dex.Order storage ref[] storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "type": "mapping(uint256 => struct Dex.Order storage ref[] storage ref)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 35,
                                  "type": "mapping(bytes32 => mapping(uint256 => struct Dex.Order storage ref[] storage ref))",
                                  "value": "orderBook"
                                },
                                "id": 116,
                                "name": "Identifier",
                                "src": "1421:9:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 57,
                                  "type": "bytes32",
                                  "value": "ticker"
                                },
                                "id": 117,
                                "name": "Identifier",
                                "src": "1431:6:0"
                              }
                            ],
                            "id": 118,
                            "name": "IndexAccess",
                            "src": "1421:17:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "uint256",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_enum$_Side_$12",
                                      "typeString": "enum Dex.Side"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "uint256"
                                    },
                                    "id": 119,
                                    "name": "ElementaryTypeName",
                                    "src": "1439:7:0"
                                  }
                                ],
                                "id": 120,
                                "name": "ElementaryTypeNameExpression",
                                "src": "1439:7:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 59,
                                  "type": "enum Dex.Side",
                                  "value": "side"
                                },
                                "id": 121,
                                "name": "Identifier",
                                "src": "1447:4:0"
                              }
                            ],
                            "id": 122,
                            "name": "FunctionCall",
                            "src": "1439:13:0"
                          }
                        ],
                        "id": 123,
                        "name": "IndexAccess",
                        "src": "1421:32:0"
                      }
                    ],
                    "id": 124,
                    "name": "VariableDeclarationStatement",
                    "src": "1396:57:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_Order_$25_memory_ptr",
                                  "typeString": "struct Dex.Order memory"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "push",
                              "type": "function (struct Dex.Order storage ref)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 115,
                                  "type": "struct Dex.Order storage ref[] storage pointer",
                                  "value": "orders"
                                },
                                "id": 125,
                                "name": "Identifier",
                                "src": "1464:6:0"
                              }
                            ],
                            "id": 127,
                            "name": "MemberAccess",
                            "src": "1464:11:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": true,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "struct Dex.Order memory",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_enum$_Side_$12",
                                      "typeString": "enum Dex.Side"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 25,
                                  "type": "type(struct Dex.Order storage pointer)",
                                  "value": "Order"
                                },
                                "id": 128,
                                "name": "Identifier",
                                "src": "1490:5:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 28,
                                  "type": "uint256",
                                  "value": "nextOrderId"
                                },
                                "id": 129,
                                "name": "Identifier",
                                "src": "1496:11:0"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4294967281,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 130,
                                    "name": "Identifier",
                                    "src": "1509:3:0"
                                  }
                                ],
                                "id": 131,
                                "name": "MemberAccess",
                                "src": "1509:10:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 59,
                                  "type": "enum Dex.Side",
                                  "value": "side"
                                },
                                "id": 132,
                                "name": "Identifier",
                                "src": "1521:4:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 57,
                                  "type": "bytes32",
                                  "value": "ticker"
                                },
                                "id": 133,
                                "name": "Identifier",
                                "src": "1527:6:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 61,
                                  "type": "uint256",
                                  "value": "amount"
                                },
                                "id": 134,
                                "name": "Identifier",
                                "src": "1535:6:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 63,
                                  "type": "uint256",
                                  "value": "price"
                                },
                                "id": 135,
                                "name": "Identifier",
                                "src": "1543:5:0"
                              }
                            ],
                            "id": 136,
                            "name": "FunctionCall",
                            "src": "1490:59:0"
                          }
                        ],
                        "id": 137,
                        "name": "FunctionCall",
                        "src": "1464:96:0"
                      }
                    ],
                    "id": 138,
                    "name": "ExpressionStatement",
                    "src": "1464:96:0"
                  },
                  {
                    "attributes": {},
                    "children": [
                      {
                        "attributes": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": ">",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "length",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 115,
                                  "type": "struct Dex.Order storage ref[] storage pointer",
                                  "value": "orders"
                                },
                                "id": 139,
                                "name": "Identifier",
                                "src": "1601:6:0"
                              }
                            ],
                            "id": 140,
                            "name": "MemberAccess",
                            "src": "1601:13:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 141,
                            "name": "Literal",
                            "src": "1617:1:0"
                          }
                        ],
                        "id": 142,
                        "name": "BinaryOperation",
                        "src": "1601:17:0"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "tuple()",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_array$_t_struct$_Order_$25_storage_$dyn_storage_ptr",
                                          "typeString": "struct Dex.Order storage ref[] storage pointer"
                                        },
                                        {
                                          "typeIdentifier": "t_enum$_Side_$12",
                                          "typeString": "enum Dex.Side"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 279,
                                      "type": "function (struct Dex.Order storage ref[] storage pointer,enum Dex.Side)",
                                      "value": "sortOrderBook"
                                    },
                                    "id": 143,
                                    "name": "Identifier",
                                    "src": "1635:13:0"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 115,
                                      "type": "struct Dex.Order storage ref[] storage pointer",
                                      "value": "orders"
                                    },
                                    "id": 144,
                                    "name": "Identifier",
                                    "src": "1649:6:0"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 59,
                                      "type": "enum Dex.Side",
                                      "value": "side"
                                    },
                                    "id": 145,
                                    "name": "Identifier",
                                    "src": "1657:4:0"
                                  }
                                ],
                                "id": 146,
                                "name": "FunctionCall",
                                "src": "1635:27:0"
                              }
                            ],
                            "id": 147,
                            "name": "ExpressionStatement",
                            "src": "1635:27:0"
                          }
                        ],
                        "id": 148,
                        "name": "Block",
                        "src": "1620:54:0"
                      }
                    ],
                    "id": 149,
                    "name": "IfStatement",
                    "src": "1597:77:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "++",
                          "prefix": false,
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 28,
                              "type": "uint256",
                              "value": "nextOrderId"
                            },
                            "id": 150,
                            "name": "Identifier",
                            "src": "1686:11:0"
                          }
                        ],
                        "id": 151,
                        "name": "UnaryOperation",
                        "src": "1686:13:0"
                      }
                    ],
                    "id": 152,
                    "name": "ExpressionStatement",
                    "src": "1686:13:0"
                  }
                ],
                "id": 153,
                "name": "Block",
                "src": "844:863:0"
              }
            ],
            "id": 154,
            "name": "FunctionDefinition",
            "src": "710:997:0"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "sortOrderBook",
              "scope": 280,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "private"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "orders",
                      "scope": 279,
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "type": "struct Dex.Order[]",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "struct Dex.Order[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "Order",
                              "referencedDeclaration": 25,
                              "type": "struct Dex.Order"
                            },
                            "id": 155,
                            "name": "UserDefinedTypeName",
                            "src": "1738:5:0"
                          }
                        ],
                        "id": 156,
                        "name": "ArrayTypeName",
                        "src": "1738:7:0"
                      }
                    ],
                    "id": 157,
                    "name": "VariableDeclaration",
                    "src": "1738:22:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "side",
                      "scope": 279,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "enum Dex.Side",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "Side",
                          "referencedDeclaration": 12,
                          "type": "enum Dex.Side"
                        },
                        "id": 158,
                        "name": "UserDefinedTypeName",
                        "src": "1762:4:0"
                      }
                    ],
                    "id": 159,
                    "name": "VariableDeclaration",
                    "src": "1762:9:0"
                  }
                ],
                "id": 160,
                "name": "ParameterList",
                "src": "1737:35:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 161,
                "name": "ParameterList",
                "src": "1781:0:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_Side_$12",
                            "typeString": "enum Dex.Side"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "==",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 159,
                              "type": "enum Dex.Side",
                              "value": "side"
                            },
                            "id": 162,
                            "name": "Identifier",
                            "src": "1796:4:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "member_name": "BUY",
                              "type": "enum Dex.Side"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 12,
                                  "type": "type(enum Dex.Side)",
                                  "value": "Side"
                                },
                                "id": 163,
                                "name": "Identifier",
                                "src": "1804:4:0"
                              }
                            ],
                            "id": 164,
                            "name": "MemberAccess",
                            "src": "1804:8:0"
                          }
                        ],
                        "id": 165,
                        "name": "BinaryOperation",
                        "src": "1796:16:0"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "assignments": [
                                    167
                                  ]
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "constant": false,
                                      "mutability": "mutable",
                                      "name": "i",
                                      "scope": 217,
                                      "stateVariable": false,
                                      "storageLocation": "default",
                                      "type": "uint256",
                                      "visibility": "internal"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "name": "uint256",
                                          "type": "uint256"
                                        },
                                        "id": 166,
                                        "name": "ElementaryTypeName",
                                        "src": "1834:7:0"
                                      }
                                    ],
                                    "id": 167,
                                    "name": "VariableDeclaration",
                                    "src": "1834:9:0"
                                  },
                                  {
                                    "attributes": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "operator": "-",
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "length",
                                          "type": "uint256"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 157,
                                              "type": "struct Dex.Order storage ref[] storage pointer",
                                              "value": "orders"
                                            },
                                            "id": 168,
                                            "name": "Identifier",
                                            "src": "1846:6:0"
                                          }
                                        ],
                                        "id": 169,
                                        "name": "MemberAccess",
                                        "src": "1846:13:0"
                                      },
                                      {
                                        "attributes": {
                                          "hexvalue": "31",
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "token": "number",
                                          "type": "int_const 1",
                                          "value": "1"
                                        },
                                        "id": 170,
                                        "name": "Literal",
                                        "src": "1862:1:0"
                                      }
                                    ],
                                    "id": 171,
                                    "name": "BinaryOperation",
                                    "src": "1846:17:0"
                                  }
                                ],
                                "id": 172,
                                "name": "VariableDeclarationStatement",
                                "src": "1834:29:0"
                              },
                              {
                                "attributes": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": ">",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 167,
                                      "type": "uint256",
                                      "value": "i"
                                    },
                                    "id": 173,
                                    "name": "Identifier",
                                    "src": "1865:1:0"
                                  },
                                  {
                                    "attributes": {
                                      "hexvalue": "30",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "token": "number",
                                      "type": "int_const 0",
                                      "value": "0"
                                    },
                                    "id": 174,
                                    "name": "Literal",
                                    "src": "1869:1:0"
                                  }
                                ],
                                "id": 175,
                                "name": "BinaryOperation",
                                "src": "1865:5:0"
                              },
                              {
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "operator": "--",
                                      "prefix": false,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 167,
                                          "type": "uint256",
                                          "value": "i"
                                        },
                                        "id": 176,
                                        "name": "Identifier",
                                        "src": "1872:1:0"
                                      }
                                    ],
                                    "id": 177,
                                    "name": "UnaryOperation",
                                    "src": "1872:3:0"
                                  }
                                ],
                                "id": 178,
                                "name": "ExpressionStatement",
                                "src": "1872:3:0"
                              },
                              {
                                "children": [
                                  {
                                    "attributes": {},
                                    "children": [
                                      {
                                        "attributes": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": ">",
                                          "type": "bool"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "price",
                                              "referencedDeclaration": 24,
                                              "type": "uint256"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "type": "struct Dex.Order storage ref"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 157,
                                                      "type": "struct Dex.Order storage ref[] storage pointer",
                                                      "value": "orders"
                                                    },
                                                    "id": 179,
                                                    "name": "Identifier",
                                                    "src": "1900:6:0"
                                                  },
                                                  {
                                                    "attributes": {
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 167,
                                                      "type": "uint256",
                                                      "value": "i"
                                                    },
                                                    "id": 180,
                                                    "name": "Identifier",
                                                    "src": "1907:1:0"
                                                  }
                                                ],
                                                "id": 181,
                                                "name": "IndexAccess",
                                                "src": "1900:9:0"
                                              }
                                            ],
                                            "id": 182,
                                            "name": "MemberAccess",
                                            "src": "1900:15:0"
                                          },
                                          {
                                            "attributes": {
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "price",
                                              "referencedDeclaration": 24,
                                              "type": "uint256"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "type": "struct Dex.Order storage ref"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 157,
                                                      "type": "struct Dex.Order storage ref[] storage pointer",
                                                      "value": "orders"
                                                    },
                                                    "id": 183,
                                                    "name": "Identifier",
                                                    "src": "1918:6:0"
                                                  },
                                                  {
                                                    "attributes": {
                                                      "commonType": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      },
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "operator": "-",
                                                      "type": "uint256"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 167,
                                                          "type": "uint256",
                                                          "value": "i"
                                                        },
                                                        "id": 184,
                                                        "name": "Identifier",
                                                        "src": "1925:1:0"
                                                      },
                                                      {
                                                        "attributes": {
                                                          "hexvalue": "31",
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": true,
                                                          "lValueRequested": false,
                                                          "token": "number",
                                                          "type": "int_const 1",
                                                          "value": "1"
                                                        },
                                                        "id": 185,
                                                        "name": "Literal",
                                                        "src": "1929:1:0"
                                                      }
                                                    ],
                                                    "id": 186,
                                                    "name": "BinaryOperation",
                                                    "src": "1925:5:0"
                                                  }
                                                ],
                                                "id": 187,
                                                "name": "IndexAccess",
                                                "src": "1918:13:0"
                                              }
                                            ],
                                            "id": 188,
                                            "name": "MemberAccess",
                                            "src": "1918:19:0"
                                          }
                                        ],
                                        "id": 189,
                                        "name": "BinaryOperation",
                                        "src": "1900:37:0"
                                      },
                                      {
                                        "children": [
                                          {
                                            "attributes": {
                                              "assignments": [
                                                191
                                              ]
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "constant": false,
                                                  "mutability": "mutable",
                                                  "name": "temp",
                                                  "scope": 214,
                                                  "stateVariable": false,
                                                  "storageLocation": "memory",
                                                  "type": "struct Dex.Order",
                                                  "visibility": "internal"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "name": "Order",
                                                      "referencedDeclaration": 25,
                                                      "type": "struct Dex.Order"
                                                    },
                                                    "id": 190,
                                                    "name": "UserDefinedTypeName",
                                                    "src": "1962:5:0"
                                                  }
                                                ],
                                                "id": 191,
                                                "name": "VariableDeclaration",
                                                "src": "1962:17:0"
                                              },
                                              {
                                                "attributes": {
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "type": "struct Dex.Order storage ref"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 157,
                                                      "type": "struct Dex.Order storage ref[] storage pointer",
                                                      "value": "orders"
                                                    },
                                                    "id": 192,
                                                    "name": "Identifier",
                                                    "src": "1982:6:0"
                                                  },
                                                  {
                                                    "attributes": {
                                                      "commonType": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      },
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "operator": "-",
                                                      "type": "uint256"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 167,
                                                          "type": "uint256",
                                                          "value": "i"
                                                        },
                                                        "id": 193,
                                                        "name": "Identifier",
                                                        "src": "1989:1:0"
                                                      },
                                                      {
                                                        "attributes": {
                                                          "hexvalue": "31",
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": true,
                                                          "lValueRequested": false,
                                                          "token": "number",
                                                          "type": "int_const 1",
                                                          "value": "1"
                                                        },
                                                        "id": 194,
                                                        "name": "Literal",
                                                        "src": "1993:1:0"
                                                      }
                                                    ],
                                                    "id": 195,
                                                    "name": "BinaryOperation",
                                                    "src": "1989:5:0"
                                                  }
                                                ],
                                                "id": 196,
                                                "name": "IndexAccess",
                                                "src": "1982:13:0"
                                              }
                                            ],
                                            "id": 197,
                                            "name": "VariableDeclarationStatement",
                                            "src": "1962:33:0"
                                          },
                                          {
                                            "children": [
                                              {
                                                "attributes": {
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "operator": "=",
                                                  "type": "struct Dex.Order storage ref"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": true,
                                                      "type": "struct Dex.Order storage ref"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 157,
                                                          "type": "struct Dex.Order storage ref[] storage pointer",
                                                          "value": "orders"
                                                        },
                                                        "id": 198,
                                                        "name": "Identifier",
                                                        "src": "2018:6:0"
                                                      },
                                                      {
                                                        "attributes": {
                                                          "commonType": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                          },
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "operator": "-",
                                                          "type": "uint256"
                                                        },
                                                        "children": [
                                                          {
                                                            "attributes": {
                                                              "overloadedDeclarations": [
                                                                null
                                                              ],
                                                              "referencedDeclaration": 167,
                                                              "type": "uint256",
                                                              "value": "i"
                                                            },
                                                            "id": 199,
                                                            "name": "Identifier",
                                                            "src": "2025:1:0"
                                                          },
                                                          {
                                                            "attributes": {
                                                              "hexvalue": "31",
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": true,
                                                              "lValueRequested": false,
                                                              "token": "number",
                                                              "type": "int_const 1",
                                                              "value": "1"
                                                            },
                                                            "id": 200,
                                                            "name": "Literal",
                                                            "src": "2029:1:0"
                                                          }
                                                        ],
                                                        "id": 201,
                                                        "name": "BinaryOperation",
                                                        "src": "2025:5:0"
                                                      }
                                                    ],
                                                    "id": 202,
                                                    "name": "IndexAccess",
                                                    "src": "2018:13:0"
                                                  },
                                                  {
                                                    "attributes": {
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "type": "struct Dex.Order storage ref"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 157,
                                                          "type": "struct Dex.Order storage ref[] storage pointer",
                                                          "value": "orders"
                                                        },
                                                        "id": 203,
                                                        "name": "Identifier",
                                                        "src": "2034:6:0"
                                                      },
                                                      {
                                                        "attributes": {
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 167,
                                                          "type": "uint256",
                                                          "value": "i"
                                                        },
                                                        "id": 204,
                                                        "name": "Identifier",
                                                        "src": "2041:1:0"
                                                      }
                                                    ],
                                                    "id": 205,
                                                    "name": "IndexAccess",
                                                    "src": "2034:9:0"
                                                  }
                                                ],
                                                "id": 206,
                                                "name": "Assignment",
                                                "src": "2018:25:0"
                                              }
                                            ],
                                            "id": 207,
                                            "name": "ExpressionStatement",
                                            "src": "2018:25:0"
                                          },
                                          {
                                            "children": [
                                              {
                                                "attributes": {
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "operator": "=",
                                                  "type": "struct Dex.Order storage ref"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": true,
                                                      "type": "struct Dex.Order storage ref"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 157,
                                                          "type": "struct Dex.Order storage ref[] storage pointer",
                                                          "value": "orders"
                                                        },
                                                        "id": 208,
                                                        "name": "Identifier",
                                                        "src": "2066:6:0"
                                                      },
                                                      {
                                                        "attributes": {
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 167,
                                                          "type": "uint256",
                                                          "value": "i"
                                                        },
                                                        "id": 209,
                                                        "name": "Identifier",
                                                        "src": "2073:1:0"
                                                      }
                                                    ],
                                                    "id": 210,
                                                    "name": "IndexAccess",
                                                    "src": "2066:9:0"
                                                  },
                                                  {
                                                    "attributes": {
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 191,
                                                      "type": "struct Dex.Order memory",
                                                      "value": "temp"
                                                    },
                                                    "id": 211,
                                                    "name": "Identifier",
                                                    "src": "2078:4:0"
                                                  }
                                                ],
                                                "id": 212,
                                                "name": "Assignment",
                                                "src": "2066:16:0"
                                              }
                                            ],
                                            "id": 213,
                                            "name": "ExpressionStatement",
                                            "src": "2066:16:0"
                                          }
                                        ],
                                        "id": 214,
                                        "name": "Block",
                                        "src": "1939:163:0"
                                      }
                                    ],
                                    "id": 215,
                                    "name": "IfStatement",
                                    "src": "1896:206:0"
                                  }
                                ],
                                "id": 216,
                                "name": "Block",
                                "src": "1877:240:0"
                              }
                            ],
                            "id": 217,
                            "name": "ForStatement",
                            "src": "1829:288:0"
                          }
                        ],
                        "id": 218,
                        "name": "Block",
                        "src": "1814:314:0"
                      },
                      {
                        "attributes": {},
                        "children": [
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_enum$_Side_$12",
                                "typeString": "enum Dex.Side"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 159,
                                  "type": "enum Dex.Side",
                                  "value": "side"
                                },
                                "id": 219,
                                "name": "Identifier",
                                "src": "2138:4:0"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "member_name": "SELL",
                                  "type": "enum Dex.Side"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 12,
                                      "type": "type(enum Dex.Side)",
                                      "value": "Side"
                                    },
                                    "id": 220,
                                    "name": "Identifier",
                                    "src": "2146:4:0"
                                  }
                                ],
                                "id": 221,
                                "name": "MemberAccess",
                                "src": "2146:9:0"
                              }
                            ],
                            "id": 222,
                            "name": "BinaryOperation",
                            "src": "2138:17:0"
                          },
                          {
                            "children": [
                              {
                                "children": [
                                  {
                                    "attributes": {
                                      "assignments": [
                                        224
                                      ]
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "constant": false,
                                          "mutability": "mutable",
                                          "name": "i",
                                          "scope": 274,
                                          "stateVariable": false,
                                          "storageLocation": "default",
                                          "type": "uint256",
                                          "visibility": "internal"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "name": "uint256",
                                              "type": "uint256"
                                            },
                                            "id": 223,
                                            "name": "ElementaryTypeName",
                                            "src": "2177:7:0"
                                          }
                                        ],
                                        "id": 224,
                                        "name": "VariableDeclaration",
                                        "src": "2177:9:0"
                                      },
                                      {
                                        "attributes": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": "-",
                                          "type": "uint256"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "length",
                                              "type": "uint256"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 157,
                                                  "type": "struct Dex.Order storage ref[] storage pointer",
                                                  "value": "orders"
                                                },
                                                "id": 225,
                                                "name": "Identifier",
                                                "src": "2189:6:0"
                                              }
                                            ],
                                            "id": 226,
                                            "name": "MemberAccess",
                                            "src": "2189:13:0"
                                          },
                                          {
                                            "attributes": {
                                              "hexvalue": "31",
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "token": "number",
                                              "type": "int_const 1",
                                              "value": "1"
                                            },
                                            "id": 227,
                                            "name": "Literal",
                                            "src": "2205:1:0"
                                          }
                                        ],
                                        "id": 228,
                                        "name": "BinaryOperation",
                                        "src": "2189:17:0"
                                      }
                                    ],
                                    "id": 229,
                                    "name": "VariableDeclarationStatement",
                                    "src": "2177:29:0"
                                  },
                                  {
                                    "attributes": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "operator": ">",
                                      "type": "bool"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 224,
                                          "type": "uint256",
                                          "value": "i"
                                        },
                                        "id": 230,
                                        "name": "Identifier",
                                        "src": "2208:1:0"
                                      },
                                      {
                                        "attributes": {
                                          "hexvalue": "30",
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "token": "number",
                                          "type": "int_const 0",
                                          "value": "0"
                                        },
                                        "id": 231,
                                        "name": "Literal",
                                        "src": "2212:1:0"
                                      }
                                    ],
                                    "id": 232,
                                    "name": "BinaryOperation",
                                    "src": "2208:5:0"
                                  },
                                  {
                                    "children": [
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": "--",
                                          "prefix": false,
                                          "type": "uint256"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 224,
                                              "type": "uint256",
                                              "value": "i"
                                            },
                                            "id": 233,
                                            "name": "Identifier",
                                            "src": "2215:1:0"
                                          }
                                        ],
                                        "id": 234,
                                        "name": "UnaryOperation",
                                        "src": "2215:3:0"
                                      }
                                    ],
                                    "id": 235,
                                    "name": "ExpressionStatement",
                                    "src": "2215:3:0"
                                  },
                                  {
                                    "children": [
                                      {
                                        "attributes": {},
                                        "children": [
                                          {
                                            "attributes": {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "operator": "<",
                                              "type": "bool"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "member_name": "price",
                                                  "referencedDeclaration": 24,
                                                  "type": "uint256"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "type": "struct Dex.Order storage ref"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 157,
                                                          "type": "struct Dex.Order storage ref[] storage pointer",
                                                          "value": "orders"
                                                        },
                                                        "id": 236,
                                                        "name": "Identifier",
                                                        "src": "2243:6:0"
                                                      },
                                                      {
                                                        "attributes": {
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 224,
                                                          "type": "uint256",
                                                          "value": "i"
                                                        },
                                                        "id": 237,
                                                        "name": "Identifier",
                                                        "src": "2250:1:0"
                                                      }
                                                    ],
                                                    "id": 238,
                                                    "name": "IndexAccess",
                                                    "src": "2243:9:0"
                                                  }
                                                ],
                                                "id": 239,
                                                "name": "MemberAccess",
                                                "src": "2243:15:0"
                                              },
                                              {
                                                "attributes": {
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "member_name": "price",
                                                  "referencedDeclaration": 24,
                                                  "type": "uint256"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "type": "struct Dex.Order storage ref"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 157,
                                                          "type": "struct Dex.Order storage ref[] storage pointer",
                                                          "value": "orders"
                                                        },
                                                        "id": 240,
                                                        "name": "Identifier",
                                                        "src": "2261:6:0"
                                                      },
                                                      {
                                                        "attributes": {
                                                          "commonType": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                          },
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "operator": "-",
                                                          "type": "uint256"
                                                        },
                                                        "children": [
                                                          {
                                                            "attributes": {
                                                              "overloadedDeclarations": [
                                                                null
                                                              ],
                                                              "referencedDeclaration": 224,
                                                              "type": "uint256",
                                                              "value": "i"
                                                            },
                                                            "id": 241,
                                                            "name": "Identifier",
                                                            "src": "2268:1:0"
                                                          },
                                                          {
                                                            "attributes": {
                                                              "hexvalue": "31",
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": true,
                                                              "lValueRequested": false,
                                                              "token": "number",
                                                              "type": "int_const 1",
                                                              "value": "1"
                                                            },
                                                            "id": 242,
                                                            "name": "Literal",
                                                            "src": "2272:1:0"
                                                          }
                                                        ],
                                                        "id": 243,
                                                        "name": "BinaryOperation",
                                                        "src": "2268:5:0"
                                                      }
                                                    ],
                                                    "id": 244,
                                                    "name": "IndexAccess",
                                                    "src": "2261:13:0"
                                                  }
                                                ],
                                                "id": 245,
                                                "name": "MemberAccess",
                                                "src": "2261:19:0"
                                              }
                                            ],
                                            "id": 246,
                                            "name": "BinaryOperation",
                                            "src": "2243:37:0"
                                          },
                                          {
                                            "children": [
                                              {
                                                "attributes": {
                                                  "assignments": [
                                                    248
                                                  ]
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "constant": false,
                                                      "mutability": "mutable",
                                                      "name": "temp",
                                                      "scope": 271,
                                                      "stateVariable": false,
                                                      "storageLocation": "memory",
                                                      "type": "struct Dex.Order",
                                                      "visibility": "internal"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "name": "Order",
                                                          "referencedDeclaration": 25,
                                                          "type": "struct Dex.Order"
                                                        },
                                                        "id": 247,
                                                        "name": "UserDefinedTypeName",
                                                        "src": "2305:5:0"
                                                      }
                                                    ],
                                                    "id": 248,
                                                    "name": "VariableDeclaration",
                                                    "src": "2305:17:0"
                                                  },
                                                  {
                                                    "attributes": {
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "type": "struct Dex.Order storage ref"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 157,
                                                          "type": "struct Dex.Order storage ref[] storage pointer",
                                                          "value": "orders"
                                                        },
                                                        "id": 249,
                                                        "name": "Identifier",
                                                        "src": "2325:6:0"
                                                      },
                                                      {
                                                        "attributes": {
                                                          "commonType": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                          },
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "operator": "-",
                                                          "type": "uint256"
                                                        },
                                                        "children": [
                                                          {
                                                            "attributes": {
                                                              "overloadedDeclarations": [
                                                                null
                                                              ],
                                                              "referencedDeclaration": 224,
                                                              "type": "uint256",
                                                              "value": "i"
                                                            },
                                                            "id": 250,
                                                            "name": "Identifier",
                                                            "src": "2332:1:0"
                                                          },
                                                          {
                                                            "attributes": {
                                                              "hexvalue": "31",
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": true,
                                                              "lValueRequested": false,
                                                              "token": "number",
                                                              "type": "int_const 1",
                                                              "value": "1"
                                                            },
                                                            "id": 251,
                                                            "name": "Literal",
                                                            "src": "2336:1:0"
                                                          }
                                                        ],
                                                        "id": 252,
                                                        "name": "BinaryOperation",
                                                        "src": "2332:5:0"
                                                      }
                                                    ],
                                                    "id": 253,
                                                    "name": "IndexAccess",
                                                    "src": "2325:13:0"
                                                  }
                                                ],
                                                "id": 254,
                                                "name": "VariableDeclarationStatement",
                                                "src": "2305:33:0"
                                              },
                                              {
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "operator": "=",
                                                      "type": "struct Dex.Order storage ref"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "isConstant": false,
                                                          "isLValue": true,
                                                          "isPure": false,
                                                          "lValueRequested": true,
                                                          "type": "struct Dex.Order storage ref"
                                                        },
                                                        "children": [
                                                          {
                                                            "attributes": {
                                                              "overloadedDeclarations": [
                                                                null
                                                              ],
                                                              "referencedDeclaration": 157,
                                                              "type": "struct Dex.Order storage ref[] storage pointer",
                                                              "value": "orders"
                                                            },
                                                            "id": 255,
                                                            "name": "Identifier",
                                                            "src": "2361:6:0"
                                                          },
                                                          {
                                                            "attributes": {
                                                              "commonType": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                              },
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": false,
                                                              "lValueRequested": false,
                                                              "operator": "-",
                                                              "type": "uint256"
                                                            },
                                                            "children": [
                                                              {
                                                                "attributes": {
                                                                  "overloadedDeclarations": [
                                                                    null
                                                                  ],
                                                                  "referencedDeclaration": 224,
                                                                  "type": "uint256",
                                                                  "value": "i"
                                                                },
                                                                "id": 256,
                                                                "name": "Identifier",
                                                                "src": "2368:1:0"
                                                              },
                                                              {
                                                                "attributes": {
                                                                  "hexvalue": "31",
                                                                  "isConstant": false,
                                                                  "isLValue": false,
                                                                  "isPure": true,
                                                                  "lValueRequested": false,
                                                                  "token": "number",
                                                                  "type": "int_const 1",
                                                                  "value": "1"
                                                                },
                                                                "id": 257,
                                                                "name": "Literal",
                                                                "src": "2372:1:0"
                                                              }
                                                            ],
                                                            "id": 258,
                                                            "name": "BinaryOperation",
                                                            "src": "2368:5:0"
                                                          }
                                                        ],
                                                        "id": 259,
                                                        "name": "IndexAccess",
                                                        "src": "2361:13:0"
                                                      },
                                                      {
                                                        "attributes": {
                                                          "isConstant": false,
                                                          "isLValue": true,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "type": "struct Dex.Order storage ref"
                                                        },
                                                        "children": [
                                                          {
                                                            "attributes": {
                                                              "overloadedDeclarations": [
                                                                null
                                                              ],
                                                              "referencedDeclaration": 157,
                                                              "type": "struct Dex.Order storage ref[] storage pointer",
                                                              "value": "orders"
                                                            },
                                                            "id": 260,
                                                            "name": "Identifier",
                                                            "src": "2377:6:0"
                                                          },
                                                          {
                                                            "attributes": {
                                                              "overloadedDeclarations": [
                                                                null
                                                              ],
                                                              "referencedDeclaration": 224,
                                                              "type": "uint256",
                                                              "value": "i"
                                                            },
                                                            "id": 261,
                                                            "name": "Identifier",
                                                            "src": "2384:1:0"
                                                          }
                                                        ],
                                                        "id": 262,
                                                        "name": "IndexAccess",
                                                        "src": "2377:9:0"
                                                      }
                                                    ],
                                                    "id": 263,
                                                    "name": "Assignment",
                                                    "src": "2361:25:0"
                                                  }
                                                ],
                                                "id": 264,
                                                "name": "ExpressionStatement",
                                                "src": "2361:25:0"
                                              },
                                              {
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "operator": "=",
                                                      "type": "struct Dex.Order storage ref"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "isConstant": false,
                                                          "isLValue": true,
                                                          "isPure": false,
                                                          "lValueRequested": true,
                                                          "type": "struct Dex.Order storage ref"
                                                        },
                                                        "children": [
                                                          {
                                                            "attributes": {
                                                              "overloadedDeclarations": [
                                                                null
                                                              ],
                                                              "referencedDeclaration": 157,
                                                              "type": "struct Dex.Order storage ref[] storage pointer",
                                                              "value": "orders"
                                                            },
                                                            "id": 265,
                                                            "name": "Identifier",
                                                            "src": "2409:6:0"
                                                          },
                                                          {
                                                            "attributes": {
                                                              "overloadedDeclarations": [
                                                                null
                                                              ],
                                                              "referencedDeclaration": 224,
                                                              "type": "uint256",
                                                              "value": "i"
                                                            },
                                                            "id": 266,
                                                            "name": "Identifier",
                                                            "src": "2416:1:0"
                                                          }
                                                        ],
                                                        "id": 267,
                                                        "name": "IndexAccess",
                                                        "src": "2409:9:0"
                                                      },
                                                      {
                                                        "attributes": {
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 248,
                                                          "type": "struct Dex.Order memory",
                                                          "value": "temp"
                                                        },
                                                        "id": 268,
                                                        "name": "Identifier",
                                                        "src": "2421:4:0"
                                                      }
                                                    ],
                                                    "id": 269,
                                                    "name": "Assignment",
                                                    "src": "2409:16:0"
                                                  }
                                                ],
                                                "id": 270,
                                                "name": "ExpressionStatement",
                                                "src": "2409:16:0"
                                              }
                                            ],
                                            "id": 271,
                                            "name": "Block",
                                            "src": "2282:163:0"
                                          }
                                        ],
                                        "id": 272,
                                        "name": "IfStatement",
                                        "src": "2239:206:0"
                                      }
                                    ],
                                    "id": 273,
                                    "name": "Block",
                                    "src": "2220:240:0"
                                  }
                                ],
                                "id": 274,
                                "name": "ForStatement",
                                "src": "2172:288:0"
                              }
                            ],
                            "id": 275,
                            "name": "Block",
                            "src": "2157:314:0"
                          }
                        ],
                        "id": 276,
                        "name": "IfStatement",
                        "src": "2134:337:0"
                      }
                    ],
                    "id": 277,
                    "name": "IfStatement",
                    "src": "1792:679:0"
                  }
                ],
                "id": 278,
                "name": "Block",
                "src": "1781:697:0"
              }
            ],
            "id": 279,
            "name": "FunctionDefinition",
            "src": "1715:763:0"
          }
        ],
        "id": 280,
        "name": "ContractDefinition",
        "src": "151:2330:0"
      }
    ],
    "id": 281,
    "name": "SourceUnit",
    "src": "0:2483:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.6+commit.7338295f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-04-29T00:01:12.140Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}